{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils } from \"../Components/Services/helper\";\nimport { notify } from \"../config\";\nexport const dashboardActions = {\n  getDashboardStats,\n  registerOrganisation\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction registerOrganisation(formData) {\n  console.log(formData);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.post(`/organisations/register`, formData).then(res => {\n      console.log(res);\n      dispatch({\n        type: DashboardConstants.ADD_ORGANISATION_SUCCESS,\n        payload: data\n      });\n    }).catch(error => {\n      var _error$response, _error$response2;\n\n      console.log(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.message);\n      notify(\"failed to process, please try again later\", error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.message);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/frontenddev/Documents/MedPharm/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","notify","dashboardActions","getDashboardStats","registerOrganisation","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","formData","post","then","res","ADD_ORGANISATION_SUCCESS","catch","error","response","message"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,6BAAnC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,iBAD8B;AAE9BC,EAAAA;AAF8B,CAAzB;;AAKP,SAASD,iBAAT,GAA6B;AAAA;;AAC3B,QAAME,eAAe,qBAAGL,aAAa,CAAC,YAAD,CAAhB,mDAAG,eAA6BM,cAArD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,SAAO,MAAOI,QAAP,IAAoB;AACzB,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAMX,SAAS,CAACY,GAAV,CAAe,kBAAiBN,eAAgB,UAAhD,CAFV;AAGAI,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd,kBAAkB,CAACe,uBADlB;AAEPC,MAAAA,OAAO,EAAEJ;AAFF,KAAD,CAAR;AAID,GARD;AASD;;AAED,SAASN,oBAAT,CAA8BW,QAA9B,EAAwC;AACtCR,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,SAAO,MAAON,QAAP,IAAoB;AACzB,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAMX,SAAS,CAACiB,IAAV,CAAgB,yBAAhB,EAA0CD,QAA1C,EACPE,IADO,CACDC,GAAD,IAAS;AACbX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACAT,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEd,kBAAkB,CAACqB,wBADlB;AAEPL,QAAAA,OAAO,EAAEJ;AAFF,OAAD,CAAR;AAID,KAPO,EAQPU,KARO,CAQAC,KAAD,IAAW;AAAA;;AAChBd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ,aAAYA,KAAZ,0CAAYA,KAAK,CAAEC,QAAnB,oDAAY,gBAAiBC,OAA7B;AACAtB,MAAAA,MAAM,CACJ,2CADI,EAEJoB,KAFI,aAEJA,KAFI,2CAEJA,KAAK,CAAEC,QAFH,qDAEJ,iBAAiBC,OAFb,CAAN;AAID,KAdO,CAFV;AAiBD,GAlBD;AAmBD","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils } from \"../Components/Services/helper\";\nimport { notify } from \"../config\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  registerOrganisation,\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId;\n  console.log(organization_id);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction registerOrganisation(formData) {\n  console.log(formData);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.post(`/organisations/register`, formData)\n      .then((res) => {\n        console.log(res);\n        dispatch({\n          type: DashboardConstants.ADD_ORGANISATION_SUCCESS,\n          payload: data,\n        });\n      })\n      .catch((error) => {\n        console.log(error?.response?.message);\n        notify(\n          \"failed to process, please try again later\",\n          error?.response?.message\n        );\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}