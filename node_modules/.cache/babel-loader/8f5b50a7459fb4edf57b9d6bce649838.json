{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  getAllPurchases\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async dispatch => {\n    var _data$data;\n\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async dispatch => {\n    var _getAdminUtils2, _getAdminUtils3;\n\n    if (((_getAdminUtils2 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils2 === void 0 ? void 0 : _getAdminUtils2.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils3 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils3 === void 0 ? void 0 : _getAdminUtils3.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async dispatch => {\n    var _getAdminUtils4, _getAdminUtils5;\n\n    if (((_getAdminUtils4 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils4 === void 0 ? void 0 : _getAdminUtils4.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils5 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils5 === void 0 ? void 0 : _getAdminUtils5.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async dispatch => {\n    var _getAdminUtils6, _getAdminUtils7;\n\n    if (((_getAdminUtils6 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils6 === void 0 ? void 0 : _getAdminUtils6.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils7 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils7 === void 0 ? void 0 : _getAdminUtils7.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async dispatch => {\n    var _getAdminUtils8, _getAdminUtils9;\n\n    if (((_getAdminUtils8 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils8 === void 0 ? void 0 : _getAdminUtils8.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils9 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils9 === void 0 ? void 0 : _getAdminUtils9.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async dispatch => {\n    var _getAdminUtils10, _getAdminUtils11;\n\n    if (((_getAdminUtils10 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils10 === void 0 ? void 0 : _getAdminUtils10.role_name) == \"super_admin\") {\n      var data = await Connector.post(`/super_admin/create-salesagent`, formData);\n    }\n\n    if (((_getAdminUtils11 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils11 === void 0 ? void 0 : _getAdminUtils11.role_name) == \"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async dispatch => {\n    var _data$data2;\n\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.data\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\"); // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction getOneSale(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async dispatch => {\n    var _getAdminUtils12, _getAdminUtils13;\n\n    if (((_getAdminUtils12 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils12 === void 0 ? void 0 : _getAdminUtils12.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils13 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils13 === void 0 ? void 0 : _getAdminUtils13.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneVendor(id) {\n  return async dispatch => {\n    var _getAdminUtils14, _getAdminUtils15;\n\n    if (((_getAdminUtils14 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils14 === void 0 ? void 0 : _getAdminUtils14.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils15 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils15 === void 0 ? void 0 : _getAdminUtils15.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async dispatch => {\n    var _getAdminUtils16, _getAdminUtils17;\n\n    if (((_getAdminUtils16 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils16 === void 0 ? void 0 : _getAdminUtils16.role_name) == \"super_admin\") {\n      var _data$data3;\n\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.data\n      });\n    }\n\n    if (((_getAdminUtils17 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils17 === void 0 ? void 0 : _getAdminUtils17.role_name) == \"admin\") {\n      var _data$data4;\n\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.data\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async dispatch => {\n    var _getAdminUtils18, _getAdminUtils19;\n\n    if (((_getAdminUtils18 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils18 === void 0 ? void 0 : _getAdminUtils18.role_name) == \"super_admin\") {\n      var _data$data5;\n\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data5 = data.data) === null || _data$data5 === void 0 ? void 0 : _data$data5.data\n      });\n    }\n\n    if (((_getAdminUtils19 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils19 === void 0 ? void 0 : _getAdminUtils19.role_name) == \"admin\") {\n      var _data$data6;\n\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data6 = data.data) === null || _data$data6 === void 0 ? void 0 : _data$data6.data\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerSupplier(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateVendor(formData, id) {\n  try {\n    var _getAdminUtils20, _getAdminUtils21;\n\n    if (((_getAdminUtils20 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils20 === void 0 ? void 0 : _getAdminUtils20.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils21 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils21 === void 0 ? void 0 : _getAdminUtils21.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    var _getAdminUtils22, _getAdminUtils23;\n\n    if (((_getAdminUtils22 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils22 === void 0 ? void 0 : _getAdminUtils22.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils23 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils23 === void 0 ? void 0 : _getAdminUtils23.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    var _getAdminUtils24, _getAdminUtils25;\n\n    if (((_getAdminUtils24 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils24 === void 0 ? void 0 : _getAdminUtils24.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils25 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils25 === void 0 ? void 0 : _getAdminUtils25.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateDriver(formData, id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils26, _getAdminUtils27;\n\n      if (((_getAdminUtils26 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils26 === void 0 ? void 0 : _getAdminUtils26.role_name) == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils27 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils27 === void 0 ? void 0 : _getAdminUtils27.role_name) == \"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils28, _getAdminUtils29;\n\n      if (((_getAdminUtils28 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils28 === void 0 ? void 0 : _getAdminUtils28.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils29 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils29 === void 0 ? void 0 : _getAdminUtils29.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteDriver(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils30, _getAdminUtils31;\n\n      if (((_getAdminUtils30 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils30 === void 0 ? void 0 : _getAdminUtils30.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils31 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils31 === void 0 ? void 0 : _getAdminUtils31.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deletePurchase(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils32, _getAdminUtils33;\n\n      if (((_getAdminUtils32 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils32 === void 0 ? void 0 : _getAdminUtils32.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils33 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils33 === void 0 ? void 0 : _getAdminUtils33.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils34, _getAdminUtils35;\n\n      if (((_getAdminUtils34 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils34 === void 0 ? void 0 : _getAdminUtils34.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils35 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils35 === void 0 ? void 0 : _getAdminUtils35.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateInventory(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    var _getAdminUtils36, _getAdminUtils37;\n\n    if (((_getAdminUtils36 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils36 === void 0 ? void 0 : _getAdminUtils36.role_name) == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async dispatch => {\n        const data = await ConnectForms.post(`/super_admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n\n    if (((_getAdminUtils37 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils37 === void 0 ? void 0 : _getAdminUtils37.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/organization/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/super_admin/create-organization`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully created organisation\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully approved\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction rejectUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/super_admin/refute-user/${id}`);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully rejected\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async dispatch => {\n      var _data$data7;\n\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data7 = data.data) === null || _data$data7 === void 0 ? void 0 : _data$data7.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async dispatch => {\n      var _data$data8;\n\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data8 = data.data) === null || _data$data8 === void 0 ? void 0 : _data$data8.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.put(`/admin/product/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/items/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/salesagent/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}","map":{"version":3,"sources":["/Users/frontenddev/Documents/FC INVENTORY/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","reloadPage","arrayMutators","FieldArray","notify","ConnectForms","dashboardActions","getDashboardStats","getAllRoles","registerOrganisation","getAllOrganisation","registerClient","registerStaff","getAllDrugs","getAllAgentsCategories","createDrug","getOneOrganisation","getOneUser","editStaff","getAllManufacturers","getOneManufacturer","registerManufacturer","updateManufacturer","updateSuppliers","getAllSuppliers","registerSupplier","getOneSupplier","updateOrganisation","getAllInventory","updateProducts","getOneProduct","createInventory","updateInventory","getOneInventory","updateVendor","updateAgent","deleteOrganisation","getAllWarehouses","getDashboardProducts","getAllAgents","getAllCustomers","createProducts","registerCustomer","registerAgent","deleteProducts","getOneCustomer","updateCustomer","deleteCustomer","deleteVendor","getOneAgent","deleteDriver","deleteAgent","getAllVendors","getOneVendor","addVendor","deletePurchase","registerPurchase","getAllSales","getDrivers","registerDriver","getOneDriver","updateDriver","getAwaitingApproval","rejectUser","approveUser","getAllPurchases","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","pathname","DASHBOARD_PURCHASE_SUCCESS","DASHBOARD_ORGANISATIONS_SUCCESS","DASHBOARD_AWAITING_APPROVAL_SUCCESS","DASHBOARD_AGENTS_SUCCESS","DASHBOARD_CUSTOMERS_SUCCESS","DASHBOARD_VENDORS_SUCCESS","DASHBOARD_DRIVERS_SUCCESS","formData","role_name","post","DASHBOARD_SALES_SUCCESS","id","DASHBOARD_WAREHOUSES_SUCCESS","path","DASHBOARD_PRODUCTS_SUCCESS","DASHBOARD_ROLES_SUCCESS","put","err","DASHBOARD_GET_ONE_ORGANISATION","getOneSale","DASHBOARD_GET_ONE_AGENT","DASHBOARD_GET_ONE_VENDOR","DASHBOARD_GET_ONE_INVENTORY","DASHBOARD_GET_ONE_USER","DASHBOARD_GETONE_CUSTOMERS_SUCCESS","DASHBOARD_GETONE_DRIVER_SUCCESS","DASHBOARD_GET_DRUGS_SUCCESS","DASHBOARD_GET_DRUGS_CATEGORY","DASHBOARD_GET_MANUFACTURERS","DASHBOARD_GET_SUPLIERS","DASHBOARD_GET_INVENTORY","DASHBOARD_GET_ONE_MANUFACTURER","DASHBOARD_GET_ONE_PRODUCT","DASHBOARD_GET_ONE_SUPPLIER","delete"],"mappings":"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","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  getAllPurchases,\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId;\n  console.log(organization_id);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async (dispatch) => {\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-customer`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-purchase`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      var data = await Connector.post(\n        `/super_admin/create-salesagent`,\n        formData\n      );\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async (dispatch) => {\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneSale(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n  };\n}\nfunction getOneVendor(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data,\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction registerSupplier(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateVendor(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/salesagent/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateCustomer(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/customer/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateDriver(formData, id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\nfunction deleteDriver(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\nfunction deletePurchase(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateInventory(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async (dispatch) => {\n        const data = await ConnectForms.post(\n          `/super_admin/create-product`,\n          formData\n        );\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(\n        `/super_admin/organization/${id}`,\n        formData\n      );\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(\n        `/super_admin/create-organization`,\n        formData\n      );\n      console.log(data);\n      if (data) {\n        notify(\"successfully created organisation\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n      console.log(data);\n      if (data) {\n        notify(\"successfully approved\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\nfunction rejectUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/super_admin/refute-user/${id}`);\n      console.log(data);\n      if (data) {\n        notify(\"successfully rejected\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.put(`/admin/product/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/items/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/salesagent/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}