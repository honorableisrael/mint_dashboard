{"ast":null,"code":"import _regeneratorRuntime from\"/Users/frontenddev/Documents/MedPharm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/frontenddev/Documents/MedPharm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{DashboardConstants}from\"../constants/AdminConstants\";import Connector from'../Components/Services/services';import{getAdminUtils}from'../Components/Services/helper';import{notify}from\"../config\";export var dashboardActions={getDashboardStats:getDashboardStats,getAllRoles:getAllRoles,getAllStaffs:getAllStaffs,registerOrganisation:registerOrganisation,getAllOrganisation:getAllOrganisation,registerClient:registerClient,registerStaff:registerStaff};function getDashboardStats(){var _getAdminUtils;var organization_id=(_getAdminUtils=getAdminUtils(\"admin_data\"))===null||_getAdminUtils===void 0?void 0:_getAdminUtils.organisationId;console.log(organization_id);return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$Connector$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Connector.get(\"/organisations/\".concat(organization_id,\"/clients\"));case 2:_yield$Connector$get=_context.sent;data=_yield$Connector$get.data.data;dispatch({type:DashboardConstants.DASHBOARD_STATS_SUCCESS,payload:data});case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}function getAllOrganisation(){var _getAdminUtils2;var organization_id=(_getAdminUtils2=getAdminUtils(\"admin_data\"))===null||_getAdminUtils2===void 0?void 0:_getAdminUtils2.organisationId;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$Connector$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Connector.get(\"/organisations/\".concat(organization_id,\"/suborganisations\"));case 2:_yield$Connector$get2=_context2.sent;data=_yield$Connector$get2.data.data;console.log(data);dispatch({type:DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,payload:data});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();}function getAllRoles(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$Connector$get3,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return Connector.get(\"/roles\");case 2:_yield$Connector$get3=_context3.sent;data=_yield$Connector$get3.data.data;console.log(data);dispatch({type:DashboardConstants.DASHBOARD_ROLES_SUCCESS,payload:data});case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();}function getAllStaffs(id,type){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _yield$Connector$get4,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return Connector.get(\"/users/\".concat(id,\"/company?type=\").concat(type));case 2:_yield$Connector$get4=_context4.sent;data=_yield$Connector$get4.data.data;console.log(data);dispatch({type:DashboardConstants.DASHBOARD_USERS_SUCCESS,payload:data});case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();}function registerOrganisation(formData){try{return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var _data$data;var data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return Connector.post(\"/organisations/register\",formData);case 2:data=_context5.sent;console.log(data);notify(data===null||data===void 0?void 0:(_data$data=data.data)===null||_data$data===void 0?void 0:_data$data.data);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();}catch(err){notify(\"failed to process\");}}function registerClient(formData){try{return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var _data$data2;var data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return Connector.post(\"/clients/register\",formData);case 2:data=_context6.sent;console.log(data);notify(data===null||data===void 0?void 0:(_data$data2=data.data)===null||_data$data2===void 0?void 0:_data$data2.data);case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref6.apply(this,arguments);};}();}catch(err){notify(\"failed to process\");}}function registerStaff(formData){try{return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var _data$data3;var data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return Connector.post(\"/users/register\",formData);case 2:data=_context7.sent;console.log(data);notify(data===null||data===void 0?void 0:(_data$data3=data.data)===null||_data$data3===void 0?void 0:_data$data3.data);case 5:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x7){return _ref7.apply(this,arguments);};}();}catch(err){notify(\"failed to process\");}}","map":{"version":3,"sources":["/Users/frontenddev/Documents/MedPharm/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","notify","dashboardActions","getDashboardStats","getAllRoles","getAllStaffs","registerOrganisation","getAllOrganisation","registerClient","registerStaff","organization_id","organisationId","console","log","dispatch","get","data","type","DASHBOARD_STATS_SUCCESS","payload","DASHBOARD_ORGANISATIONS_SUCCESS","DASHBOARD_ROLES_SUCCESS","id","DASHBOARD_USERS_SUCCESS","formData","post","err"],"mappings":"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","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from '../Components/Services/services';\nimport { getAdminUtils } from '../Components/Services/helper';\nimport { notify } from \"../config\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  getAllStaffs,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId\n  console.log(organization_id)\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllOrganisation() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/suborganisations`);\n    console.log(data)\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllRoles() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/roles`);\n    console.log(data)\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllStaffs(id,type) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}/company?type=${type}`);\n    console.log(data)\n    dispatch({\n      type: DashboardConstants.DASHBOARD_USERS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction registerOrganisation(formData){\n  try{\n   return async (dispatch) => {\n      const data = await Connector.post(`/organisations/register`,formData);\n      console.log(data)\n      notify(data?.data?.data)\n    };\n  }\n  catch(err){\n    notify(\"failed to process\")\n  }\n}\n\nfunction registerClient(formData){\n  try{\n   return async (dispatch) => {\n      const data = await Connector.post(`/clients/register`,formData);\n      console.log(data)\n      notify(data?.data?.data)\n    };\n  }\n  catch(err){\n    notify(\"failed to process\")\n  }\n}\n\nfunction registerStaff(formData){\n  try{\n   return async (dispatch) => {\n      const data = await Connector.post(`/users/register`,formData);\n      console.log(data)\n      notify(data?.data?.data)\n    };\n  }\n  catch(err){\n    notify(\"failed to process\")\n  }\n}\n"]},"metadata":{},"sourceType":"module"}