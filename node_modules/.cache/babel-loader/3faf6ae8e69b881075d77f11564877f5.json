{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from '../Components/Services/services';\nimport { getAdminUtils } from '../Components/Services/helper';\nimport { notify } from \"../config\";\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllStaffs,\n  registerOrganisation\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllStaffs(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}/company`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STAFFS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/organisations/register`, formData);\n      console.log(data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}","map":{"version":3,"sources":["/Users/frontenddev/Documents/MedPharm/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","notify","dashboardActions","getDashboardStats","getAllStaffs","registerOrganisation","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","id","DASHBOARD_STAFFS_SUCCESS","formData","post","err"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,6BAAnC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,iBAD8B;AAE9BC,EAAAA,YAF8B;AAG9BC,EAAAA;AAH8B,CAAzB;;AAMP,SAASF,iBAAT,GAA6B;AAAA;;AAC3B,QAAMG,eAAe,qBAAGN,aAAa,CAAC,YAAD,CAAhB,mDAAG,eAA6BO,cAArD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,SAAO,MAAOI,QAAP,IAAoB;AACzB,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAMZ,SAAS,CAACa,GAAV,CAAe,kBAAiBN,eAAgB,UAAhD,CAFV;AAGAI,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf,kBAAkB,CAACgB,uBADlB;AAEPC,MAAAA,OAAO,EAAEJ;AAFF,KAAD,CAAR;AAID,GARD;AASD;;AAED,SAASP,YAAT,CAAsBY,EAAtB,EAA0B;AACxB,SAAO,MAAON,QAAP,IAAoB;AACzB,UAAM;AACJC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AADF,QAEF,MAAMZ,SAAS,CAACa,GAAV,CAAe,UAASI,EAAG,UAA3B,CAFV;AAGAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf,kBAAkB,CAACmB,wBADlB;AAEPF,MAAAA,OAAO,EAAEJ;AAFF,KAAD,CAAR;AAID,GARD;AASD;;AAED,SAASN,oBAAT,CAA8Ba,QAA9B,EAAuC;AACrC,MAAG;AACF,WAAO,MAAOR,QAAP,IAAoB;AACxB,YAAMC,IAAI,GAAG,MAAMZ,SAAS,CAACoB,IAAV,CAAgB,yBAAhB,EAAyCD,QAAzC,CAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,KAHF;AAIA,GALD,CAMA,OAAMS,GAAN,EAAU;AACRnB,IAAAA,MAAM,CAAC,mBAAD,CAAN;AACD;AACF","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from '../Components/Services/services';\nimport { getAdminUtils } from '../Components/Services/helper';\nimport { notify } from \"../config\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllStaffs,\n  registerOrganisation\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId\n  console.log(organization_id)\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllStaffs(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}/company`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STAFFS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction registerOrganisation(formData){\n  try{\n   return async (dispatch) => {\n      const data = await Connector.post(`/organisations/register`,formData);\n      console.log(data)\n    };\n  }\n  catch(err){\n    notify(\"failed to process\")\n  }\n}"]},"metadata":{},"sourceType":"module"}