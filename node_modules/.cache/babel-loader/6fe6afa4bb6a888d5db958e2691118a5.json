{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  deleteVendor,\n  getOneAgent,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async dispatch => {\n    var _data$data;\n\n    const data = await Connector.get(`/super_admin/all-organization?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async dispatch => {\n    const data = await Connector.post(`/super_admin/create-customer`, formData);\n\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async dispatch => {\n    const data = await Connector.post(`/super_admin/create-vendor`, formData);\n\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async dispatch => {\n    const data = await Connector.post(`/super_admin/create-salesagent`, formData);\n\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`${path}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\"); // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/salesagent/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n      payload: data\n    });\n  };\n}\n\nfunction getOneVendor(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/vendor/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n      payload: data\n    });\n  };\n}\n\nfunction getOneInventory(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async dispatch => {\n    var _data$data2;\n\n    const data = await Connector.get(`/super_admin/customer/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.data\n    });\n  };\n}\n\nfunction getAllDrugs() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data\n    });\n  };\n}\n\nfunction getAllManufacturers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/items/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerSupplier(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/salesagent/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/customer/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/customer/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/vendor/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateInventory(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.post(`/items/create`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"Successfully created\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/organization/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/super_admin/create-organization`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully created organisation\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async dispatch => {\n      var _data$data3;\n\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async dispatch => {\n      var _data$data4;\n\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.post(`/items/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/items/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/salesagent/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}","map":{"version":3,"sources":["/Users/frontenddev/Documents/FC INVENTORY/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","reloadPage","arrayMutators","FieldArray","notify","ConnectForms","dashboardActions","getDashboardStats","getAllRoles","registerOrganisation","getAllOrganisation","registerClient","registerStaff","getAllDrugs","getAllAgentsCategories","createDrug","getOneOrganisation","getOneUser","editStaff","getAllManufacturers","getOneManufacturer","registerManufacturer","updateManufacturer","updateSuppliers","getAllSuppliers","registerSupplier","getOneSupplier","updateOrganisation","getAllInventory","updateProducts","getOneProduct","createInventory","updateInventory","getOneInventory","updateAgent","deleteOrganisation","getAllWarehouses","getDashboardProducts","getAllAgents","getAllCustomers","createProducts","registerCustomer","registerAgent","deleteProducts","getOneCustomer","updateCustomer","deleteCustomer","deleteVendor","getOneAgent","deleteAgent","getAllVendors","getOneVendor","addVendor","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","DASHBOARD_ORGANISATIONS_SUCCESS","pathname","DASHBOARD_AGENTS_SUCCESS","DASHBOARD_CUSTOMERS_SUCCESS","DASHBOARD_VENDORS_SUCCESS","formData","post","id","DASHBOARD_WAREHOUSES_SUCCESS","path","DASHBOARD_PRODUCTS_SUCCESS","DASHBOARD_ROLES_SUCCESS","put","err","DASHBOARD_GET_ONE_ORGANISATION","DASHBOARD_GET_ONE_AGENT","DASHBOARD_GET_ONE_VENDOR","DASHBOARD_GET_ONE_INVENTORY","DASHBOARD_GET_ONE_USER","DASHBOARD_GETONE_CUSTOMERS_SUCCESS","DASHBOARD_GET_DRUGS_SUCCESS","DASHBOARD_GET_DRUGS_CATEGORY","DASHBOARD_GET_MANUFACTURERS","DASHBOARD_GET_SUPLIERS","DASHBOARD_GET_INVENTORY","DASHBOARD_GET_ONE_MANUFACTURER","DASHBOARD_GET_ONE_PRODUCT","DASHBOARD_GET_ONE_SUPPLIER","delete"],"mappings":"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","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  deleteVendor,\n  getOneAgent,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId;\n  console.log(organization_id);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async (dispatch) => {\n    const data = await Connector.get(\n      `/super_admin/all-organization?per_page=${1}`\n    );\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async (dispatch) => {\n    const data = await Connector.post(`/super_admin/create-customer`, formData);\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async (dispatch) => {\n    const data = await Connector.post(`/super_admin/create-vendor`, formData);\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async (dispatch) => {\n    const data = await Connector.post(`/super_admin/create-salesagent`, formData);\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`${path}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllRoles() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction getOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/salesagent/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n      payload: data,\n    });\n  };\n}\nfunction getOneVendor(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/vendor/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n      payload: data,\n    });\n  };\n}\n\n\nfunction getOneInventory(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async (dispatch) => {\n    const data = await Connector.get(`/super_admin/customer/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\nfunction getAllDrugs() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllAgentsCategories() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data,\n    });\n  };\n}\nfunction getAllManufacturers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data,\n    });\n  };\n}\nfunction getAllSuppliers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data,\n    });\n  };\n}\nfunction getAllInventory() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data,\n    });\n  };\n}\nfunction getOneProduct(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/items/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data,\n    });\n  };\n}\nfunction getOneSupplier(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data,\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction registerSupplier(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/super_admin/salesagent/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateCustomer(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/super_admin/customer/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/customer/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/vendor/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateInventory(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.post(`/items/create`, formData);\n      console.log(data);\n      if (data) {\n        notify(\"Successfully created\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(\n        `/super_admin/organization/${id}`,\n        formData\n      );\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(\n        `/super_admin/create-organization`,\n        formData\n      );\n      console.log(data);\n      if (data) {\n        notify(\"successfully created organisation\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.post(`/items/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/items/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/salesagent/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}"]},"metadata":{},"sourceType":"module"}