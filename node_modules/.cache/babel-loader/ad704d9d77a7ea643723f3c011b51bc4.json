{"ast":null,"code":"var _jsxFileName = \"/Users/frontenddev/Documents/MedPharm/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport { renderRoutes, routes } from \"./routes\";\nimport \"./Components/assets/styles/index.css\";\nimport { createBrowserHistory } from \"history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst history = createBrowserHistory();\n\nfunction BrowserRouter(_ref) {\n  _s();\n\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory();\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowserRouter, \"hC5nS04lXrFQ7WolEibsC+VrdWc=\");\n\n_c = BrowserRouter;\n\nconst App = _ref2 => {\n  let {\n    history\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: renderRoutes(routes)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BrowserRouter\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/frontenddev/Documents/MedPharm/src/App.tsx"],"names":["React","BrowserRouter","Router","renderRoutes","routes","createBrowserHistory","history","basename","children","window","historyRef","useRef","current","state","setState","useState","action","location","useLayoutEffect","listen","App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,WAAP;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,UAArC;AACA,OAAO,sCAAP;AACA,SAASC,oBAAT,QAAqC,SAArC;;AACA,MAAMC,OAAO,GAAGD,oBAAoB,EAApC;;AAGA,SAASJ,aAAT,OAA4D;AAAA;;AAAA,MAArC;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,GAAqC;AAC1D,MAAIC,UAAU,GAAGV,KAAK,CAACW,MAAN,EAAjB;;AACA,MAAID,UAAU,CAACE,OAAX,IAAsB,IAA1B,EAAgC;AAC9BF,IAAAA,UAAU,CAACE,OAAX,GAAqBP,oBAAoB,EAAzC;AACD;;AAED,MAAIC,OAAO,GAAGI,UAAU,CAACE,OAAzB;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACe,QAAN,CAAe;AACrCC,IAAAA,MAAM,EAAEV,OAAO,CAACU,MADqB;AAErCC,IAAAA,QAAQ,EAAEX,OAAO,CAACW;AAFmB,GAAf,CAAxB;AAKAjB,EAAAA,KAAK,CAACkB,eAAN,CAAsB,MAAMZ,OAAO,CAACa,MAAR,CAAeL,QAAf,CAA5B,EAAsD,CAACR,OAAD,CAAtD;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,QAAQ,EAAEK,KAAK,CAACI,QAHlB;AAIE,IAAA,cAAc,EAAEJ,KAAK,CAACG,MAJxB;AAKE,IAAA,SAAS,EAAEV;AALb;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvBQL,a;;KAAAA,a;;AAwBT,MAAMmB,GAAQ,GAAG,SAAiB;AAAA,MAAhB;AAAEd,IAAAA;AAAF,GAAgB;AAChC,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,OAAjB;AAAA,cAA2BH,YAAY,CAACC,MAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMgB,G;AAGN,eAAeA,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport { renderRoutes, routes } from \"./routes\";\nimport \"./Components/assets/styles/index.css\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\n\n\nfunction BrowserRouter({ basename, children, window }: any) {\n  let historyRef = React.useRef<any>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory();\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\nconst App: any = ({ history }) => {\n  return <Router history={history}>{renderRoutes(routes)}</Router>;\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}