{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  GetOnePurchase,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  getAllPurchases,\n  deleteSales,\n  updatePurchase,\n  createSales,\n  updateSales,\n  GetOneSale,\n  getAnalytics\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAnalytics(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ANALYTICS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async dispatch => {\n    var _data$data;\n\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async dispatch => {\n    var _getAdminUtils2, _getAdminUtils3, _getAdminUtils3$;\n\n    if (((_getAdminUtils2 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils2 === void 0 ? void 0 : _getAdminUtils2.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils3 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils3 === void 0 ? void 0 : (_getAdminUtils3$ = _getAdminUtils3[0]) === null || _getAdminUtils3$ === void 0 ? void 0 : _getAdminUtils3$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction createSales(formData) {\n  return async dispatch => {\n    var _getAdminUtils4, _getAdminUtils5, _getAdminUtils5$;\n\n    if (((_getAdminUtils4 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils4 === void 0 ? void 0 : _getAdminUtils4.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-sales-order`, formData);\n\n      if (data) {\n        notify(\"successfully created sales\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils5 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils5 === void 0 ? void 0 : (_getAdminUtils5$ = _getAdminUtils5[0]) === null || _getAdminUtils5$ === void 0 ? void 0 : _getAdminUtils5$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-sales-order`, formData);\n\n      if (data) {\n        notify(\"successfully created sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async dispatch => {\n    var _getAdminUtils6, _getAdminUtils7, _getAdminUtils7$;\n\n    if (((_getAdminUtils6 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils6 === void 0 ? void 0 : _getAdminUtils6.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils7 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils7 === void 0 ? void 0 : (_getAdminUtils7$ = _getAdminUtils7[0]) === null || _getAdminUtils7$ === void 0 ? void 0 : _getAdminUtils7$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async dispatch => {\n    var _getAdminUtils8, _getAdminUtils9, _getAdminUtils9$;\n\n    if (((_getAdminUtils8 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils8 === void 0 ? void 0 : _getAdminUtils8.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils9 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils9 === void 0 ? void 0 : (_getAdminUtils9$ = _getAdminUtils9[0]) === null || _getAdminUtils9$ === void 0 ? void 0 : _getAdminUtils9$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async dispatch => {\n    var _getAdminUtils10, _getAdminUtils11, _getAdminUtils11$;\n\n    if (((_getAdminUtils10 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils10 === void 0 ? void 0 : _getAdminUtils10.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils11 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils11 === void 0 ? void 0 : (_getAdminUtils11$ = _getAdminUtils11[0]) === null || _getAdminUtils11$ === void 0 ? void 0 : _getAdminUtils11$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async dispatch => {\n    var _getAdminUtils12, _getAdminUtils13, _getAdminUtils13$;\n\n    if (((_getAdminUtils12 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils12 === void 0 ? void 0 : _getAdminUtils12.role_name) == \"super_admin\") {\n      var data = await Connector.post(`/super_admin/create-salesagent`, formData);\n    }\n\n    if (((_getAdminUtils13 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils13 === void 0 ? void 0 : (_getAdminUtils13$ = _getAdminUtils13[0]) === null || _getAdminUtils13$ === void 0 ? void 0 : _getAdminUtils13$.role_name) == \"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async dispatch => {\n    var _data$data2;\n\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.data\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\"); // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction GetOnePurchase(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PURCHASE,\n      payload: data\n    });\n  };\n}\n\n_c = GetOnePurchase;\n\nfunction GetOneSale(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SALE,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\n_c2 = GetOneSale;\n\nfunction getOneSale(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async dispatch => {\n    var _getAdminUtils14, _getAdminUtils15, _getAdminUtils15$;\n\n    if (((_getAdminUtils14 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils14 === void 0 ? void 0 : _getAdminUtils14.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils15 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils15 === void 0 ? void 0 : (_getAdminUtils15$ = _getAdminUtils15[0]) === null || _getAdminUtils15$ === void 0 ? void 0 : _getAdminUtils15$.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneVendor(id) {\n  return async dispatch => {\n    var _getAdminUtils16, _getAdminUtils16$, _getAdminUtils17;\n\n    if (((_getAdminUtils16 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils16 === void 0 ? void 0 : (_getAdminUtils16$ = _getAdminUtils16[0]) === null || _getAdminUtils16$ === void 0 ? void 0 : _getAdminUtils16$.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils17 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils17 === void 0 ? void 0 : _getAdminUtils17.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async dispatch => {\n    var _getAdminUtils18, _getAdminUtils19, _getAdminUtils19$;\n\n    if (((_getAdminUtils18 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils18 === void 0 ? void 0 : _getAdminUtils18.role_name) == \"super_admin\") {\n      var _data$data3;\n\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.data\n      });\n    }\n\n    if (((_getAdminUtils19 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils19 === void 0 ? void 0 : (_getAdminUtils19$ = _getAdminUtils19[0]) === null || _getAdminUtils19$ === void 0 ? void 0 : _getAdminUtils19$.role_name) == \"admin\") {\n      var _data$data4;\n\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.data\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async dispatch => {\n    var _getAdminUtils20, _getAdminUtils21, _getAdminUtils21$;\n\n    if (((_getAdminUtils20 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils20 === void 0 ? void 0 : _getAdminUtils20.role_name) == \"super_admin\") {\n      var _data$data5;\n\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data5 = data.data) === null || _data$data5 === void 0 ? void 0 : _data$data5.data\n      });\n    }\n\n    if (((_getAdminUtils21 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils21 === void 0 ? void 0 : (_getAdminUtils21$ = _getAdminUtils21[0]) === null || _getAdminUtils21$ === void 0 ? void 0 : _getAdminUtils21$.role_name) == \"admin\") {\n      var _data$data6;\n\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data6 = data.data) === null || _data$data6 === void 0 ? void 0 : _data$data6.data\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerSupplier(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateVendor(formData, id) {\n  try {\n    var _getAdminUtils22, _getAdminUtils23, _getAdminUtils23$;\n\n    if (((_getAdminUtils22 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils22 === void 0 ? void 0 : _getAdminUtils22.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils23 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils23 === void 0 ? void 0 : (_getAdminUtils23$ = _getAdminUtils23[0]) === null || _getAdminUtils23$ === void 0 ? void 0 : _getAdminUtils23$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateSales(formData, id) {\n  try {\n    var _getAdminUtils24, _getAdminUtils25, _getAdminUtils25$;\n\n    if (((_getAdminUtils24 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils24 === void 0 ? void 0 : _getAdminUtils24.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils25 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils25 === void 0 ? void 0 : (_getAdminUtils25$ = _getAdminUtils25[0]) === null || _getAdminUtils25$ === void 0 ? void 0 : _getAdminUtils25$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    var _getAdminUtils26, _getAdminUtils27, _getAdminUtils27$;\n\n    if (((_getAdminUtils26 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils26 === void 0 ? void 0 : _getAdminUtils26.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils27 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils27 === void 0 ? void 0 : (_getAdminUtils27$ = _getAdminUtils27[0]) === null || _getAdminUtils27$ === void 0 ? void 0 : _getAdminUtils27$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    var _getAdminUtils28, _getAdminUtils29, _getAdminUtils29$;\n\n    if (((_getAdminUtils28 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils28 === void 0 ? void 0 : _getAdminUtils28.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils29 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils29 === void 0 ? void 0 : (_getAdminUtils29$ = _getAdminUtils29[0]) === null || _getAdminUtils29$ === void 0 ? void 0 : _getAdminUtils29$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateDriver(formData, id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils30, _getAdminUtils31, _getAdminUtils31$;\n\n      if (((_getAdminUtils30 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils30 === void 0 ? void 0 : _getAdminUtils30.role_name) == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils31 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils31 === void 0 ? void 0 : (_getAdminUtils31$ = _getAdminUtils31[0]) === null || _getAdminUtils31$ === void 0 ? void 0 : _getAdminUtils31$.role_name) == \"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils32, _getAdminUtils33, _getAdminUtils33$;\n\n      if (((_getAdminUtils32 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils32 === void 0 ? void 0 : _getAdminUtils32.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils33 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils33 === void 0 ? void 0 : (_getAdminUtils33$ = _getAdminUtils33[0]) === null || _getAdminUtils33$ === void 0 ? void 0 : _getAdminUtils33$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteSales(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils34, _getAdminUtils35, _getAdminUtils35$;\n\n      if (((_getAdminUtils34 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils34 === void 0 ? void 0 : _getAdminUtils34.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils35 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils35 === void 0 ? void 0 : (_getAdminUtils35$ = _getAdminUtils35[0]) === null || _getAdminUtils35$ === void 0 ? void 0 : _getAdminUtils35$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/sales-order/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteDriver(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils36, _getAdminUtils37, _getAdminUtils37$;\n\n      if (((_getAdminUtils36 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils36 === void 0 ? void 0 : _getAdminUtils36.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils37 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils37 === void 0 ? void 0 : (_getAdminUtils37$ = _getAdminUtils37[0]) === null || _getAdminUtils37$ === void 0 ? void 0 : _getAdminUtils37$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deletePurchase(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils38, _getAdminUtils39, _getAdminUtils39$;\n\n      if (((_getAdminUtils38 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils38 === void 0 ? void 0 : _getAdminUtils38.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils39 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils39 === void 0 ? void 0 : (_getAdminUtils39$ = _getAdminUtils39[0]) === null || _getAdminUtils39$ === void 0 ? void 0 : _getAdminUtils39$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils40, _getAdminUtils41, _getAdminUtils41$;\n\n      if (((_getAdminUtils40 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils40 === void 0 ? void 0 : _getAdminUtils40.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils41 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils41 === void 0 ? void 0 : (_getAdminUtils41$ = _getAdminUtils41[0]) === null || _getAdminUtils41$ === void 0 ? void 0 : _getAdminUtils41$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateInventory(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    var _getAdminUtils42, _getAdminUtils43, _getAdminUtils43$;\n\n    if (((_getAdminUtils42 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils42 === void 0 ? void 0 : _getAdminUtils42.role_name) == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async dispatch => {\n        const data = await ConnectForms.post(`/super_admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n\n    if (((_getAdminUtils43 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils43 === void 0 ? void 0 : (_getAdminUtils43$ = _getAdminUtils43[0]) === null || _getAdminUtils43$ === void 0 ? void 0 : _getAdminUtils43$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/organization/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/super_admin/create-organization`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully created organisation\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully approved\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction rejectUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/super_admin/refute-user/${id}`);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully rejected\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async dispatch => {\n      var _data$data7;\n\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data7 = data.data) === null || _data$data7 === void 0 ? void 0 : _data$data7.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async dispatch => {\n      var _data$data8;\n\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data8 = data.data) === null || _data$data8 === void 0 ? void 0 : _data$data8.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.put(`/admin/product/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updatePurchase(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.put(`/admin/purchase/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/items/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/salesagent/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetOnePurchase\");\n$RefreshReg$(_c2, \"GetOneSale\");","map":{"version":3,"sources":["/Users/frontenddev/Documents/FC INVENTORY/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","reloadPage","arrayMutators","FieldArray","notify","ConnectForms","dashboardActions","getDashboardStats","getAllRoles","registerOrganisation","getAllOrganisation","registerClient","registerStaff","getAllDrugs","getAllAgentsCategories","createDrug","getOneOrganisation","getOneUser","editStaff","getAllManufacturers","getOneManufacturer","registerManufacturer","updateManufacturer","updateSuppliers","getAllSuppliers","registerSupplier","getOneSupplier","updateOrganisation","GetOnePurchase","getAllInventory","updateProducts","getOneProduct","createInventory","updateInventory","getOneInventory","updateVendor","updateAgent","deleteOrganisation","getAllWarehouses","getDashboardProducts","getAllAgents","getAllCustomers","createProducts","registerCustomer","registerAgent","deleteProducts","getOneCustomer","updateCustomer","deleteCustomer","deleteVendor","getOneAgent","deleteDriver","deleteAgent","getAllVendors","getOneVendor","addVendor","deletePurchase","registerPurchase","getAllSales","getDrivers","registerDriver","getOneDriver","updateDriver","getAwaitingApproval","rejectUser","approveUser","getAllPurchases","deleteSales","updatePurchase","createSales","updateSales","GetOneSale","getAnalytics","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","pathname","DASHBOARD_PURCHASE_SUCCESS","DASHBOARD_ANALYTICS_SUCCESS","DASHBOARD_ORGANISATIONS_SUCCESS","DASHBOARD_AWAITING_APPROVAL_SUCCESS","DASHBOARD_AGENTS_SUCCESS","DASHBOARD_CUSTOMERS_SUCCESS","DASHBOARD_VENDORS_SUCCESS","DASHBOARD_DRIVERS_SUCCESS","formData","role_name","post","DASHBOARD_SALES_SUCCESS","id","DASHBOARD_WAREHOUSES_SUCCESS","path","DASHBOARD_PRODUCTS_SUCCESS","DASHBOARD_ROLES_SUCCESS","put","err","DASHBOARD_GET_ONE_ORGANISATION","DASHBOARD_GET_ONE_PURCHASE","DASHBOARD_GET_SALE","getOneSale","DASHBOARD_GET_ONE_AGENT","DASHBOARD_GET_ONE_VENDOR","DASHBOARD_GET_ONE_INVENTORY","DASHBOARD_GET_ONE_USER","DASHBOARD_GETONE_CUSTOMERS_SUCCESS","DASHBOARD_GETONE_DRIVER_SUCCESS","DASHBOARD_GET_DRUGS_SUCCESS","DASHBOARD_GET_DRUGS_CATEGORY","DASHBOARD_GET_MANUFACTURERS","DASHBOARD_GET_SUPLIERS","DASHBOARD_GET_INVENTORY","DASHBOARD_GET_ONE_MANUFACTURER","DASHBOARD_GET_ONE_PRODUCT","DASHBOARD_GET_ONE_SUPPLIER","delete"],"mappings":"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","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  GetOnePurchase,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  getAllPurchases,\n  deleteSales,\n  updatePurchase,\n  createSales,\n  updateSales,\n  GetOneSale,\n  getAnalytics,\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId;\n  console.log(organization_id);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\nfunction getAnalytics(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ANALYTICS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async (dispatch) => {\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-customer`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction createSales(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-sales-order`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully created sales\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const data = await Connector.post(`/admin/create-sales-order`, formData);\n      if (data) {\n        notify(\"successfully created sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-purchase`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      var data = await Connector.post(\n        `/super_admin/create-salesagent`,\n        formData\n      );\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async (dispatch) => {\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\nfunction GetOnePurchase(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PURCHASE,\n      payload: data,\n    });\n  };\n}\nfunction GetOneSale(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SALE,\n      payload: data?.data,\n    });\n  };\n}\n\n\nfunction getOneSale(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n  };\n}\nfunction getOneVendor(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data,\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction registerSupplier(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateVendor(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateSales(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/salesagent/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/customer/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateDriver(formData, id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\nfunction deleteSales(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n        const data = await Connector.delete(`/admin/sales-order/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\n\nfunction deleteDriver(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deletePurchase(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n        const data = await Connector.delete(`/admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateInventory(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async (dispatch) => {\n        const data = await ConnectForms.post(\n          `/super_admin/create-product`,\n          formData\n        );\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name ==\"admin\") {\n      return async (dispatch) => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(\n        `/super_admin/organization/${id}`,\n        formData\n      );\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(\n        `/super_admin/create-organization`,\n        formData\n      );\n      console.log(data);\n      if (data) {\n        notify(\"successfully created organisation\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n      console.log(data);\n      if (data) {\n        notify(\"successfully approved\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\nfunction rejectUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/super_admin/refute-user/${id}`);\n      console.log(data);\n      if (data) {\n        notify(\"successfully rejected\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.put(`/admin/product/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updatePurchase(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.put(`/admin/purchase/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\n\nfunction deleteProducts(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/items/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/salesagent/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}