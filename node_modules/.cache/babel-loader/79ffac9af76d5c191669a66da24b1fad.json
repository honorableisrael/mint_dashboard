{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from '../Components/Services/ConnectForms';\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  getAllStaffs,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  createProducts,\n  deleteProducts\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async dispatch => {\n    var _data$data;\n\n    const data = await Connector.get(`/super_admin/all-organization?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getDashboardProducts() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/items`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllStaffs(id, type) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}/company?type=${type}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_USERS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\"); // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction getOneInventory(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data\n    });\n  };\n}\n\nfunction getAllDrugs() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data\n    });\n  };\n}\n\nfunction getAllManufacturers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/items/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerSupplier(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateInventory(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.post(`/items/create`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"Successfully created\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/organization/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/super_admin/create-organization`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully created organisation\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async dispatch => {\n      var _data$data2;\n\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async dispatch => {\n      var _data$data3;\n\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.put(`/items/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/items/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}","map":{"version":3,"sources":["/Users/frontenddev/Documents/FC INVENTORY/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","reloadPage","arrayMutators","FieldArray","notify","ConnectForms","dashboardActions","getDashboardStats","getAllRoles","getAllStaffs","registerOrganisation","getAllOrganisation","registerClient","registerStaff","getAllDrugs","getAllAgentsCategories","createDrug","getOneOrganisation","getOneUser","editStaff","getAllManufacturers","getOneManufacturer","registerManufacturer","updateManufacturer","updateSuppliers","getAllSuppliers","registerSupplier","getOneSupplier","updateOrganisation","getAllInventory","updateProducts","getOneProduct","createInventory","updateInventory","getOneInventory","deleteOrganisation","getAllWarehouses","getDashboardProducts","createProducts","deleteProducts","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","DASHBOARD_ORGANISATIONS_SUCCESS","id","DASHBOARD_WAREHOUSES_SUCCESS","DASHBOARD_PRODUCTS_SUCCESS","DASHBOARD_ROLES_SUCCESS","DASHBOARD_USERS_SUCCESS","formData","put","err","DASHBOARD_GET_ONE_ORGANISATION","DASHBOARD_GET_ONE_INVENTORY","DASHBOARD_GET_ONE_USER","DASHBOARD_GET_DRUGS_SUCCESS","DASHBOARD_GET_DRUGS_CATEGORY","DASHBOARD_GET_MANUFACTURERS","DASHBOARD_GET_SUPLIERS","DASHBOARD_GET_INVENTORY","DASHBOARD_GET_ONE_MANUFACTURER","DASHBOARD_GET_ONE_PRODUCT","DASHBOARD_GET_ONE_SUPPLIER","post","delete"],"mappings":"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","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from '../Components/Services/ConnectForms';\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  getAllStaffs,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  createProducts,\n  deleteProducts,\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId;\n  console.log(organization_id);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async (dispatch) => {\n    const data = await Connector.get(`/super_admin/all-organization?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\n\n\nfunction getDashboardProducts() {\n\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/items`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllRoles() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllStaffs(id, type) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}/company?type=${type}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_USERS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction getOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\nfunction getOneInventory(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllDrugs() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getAllAgentsCategories() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data,\n    });\n  };\n}\nfunction getAllManufacturers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data,\n    });\n  };\n}\nfunction getAllSuppliers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data,\n    });\n  };\n}\nfunction getAllInventory() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data,\n    });\n  };\n}\nfunction getOneProduct(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/items/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data,\n    });\n  };\n}\nfunction getOneSupplier(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data,\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction registerSupplier(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateSuppliers(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateInventory(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.post(`/items/create`, formData);\n      console.log(data);\n      if(data){\n        notify(\"Successfully created\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(\n        `/super_admin/organization/${id}`,\n        formData\n      );\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(\n        `/super_admin/create-organization`,\n        formData\n      );\n      console.log(data);\n      if (data) {\n        notify(\"successfully created organisation\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction updateProducts(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.put(\n        `/items/${id}`,\n        formData\n      );\n      if(data){\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction deleteProducts( id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/items/${id}`)\n      if(data){\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}