{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  AdminUpdateOrganisation,\n  GetOnePurchase,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  AdminGetOneOrganisation,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  AdminRejectUser,\n  getAllPurchases,\n  deleteSales,\n  updatePurchase,\n  createSales,\n  updateSales,\n  AdminApproveUser,\n  GetOneSale,\n  getAnalytics,\n  uploadFile,\n  registerAdmin,\n  approveSale,\n  rejectSale,\n  getSalesInvoice,\n  getWalletDetails,\n  createWallet,\n  Transfer_Funds,\n  getAllBanks,\n  getAllFunds,\n  AccountEnquiry,\n  getAllLoanRequest,\n  getLoanRequestSetting,\n  getLoanBreakdown,\n  CreateLoanRequest\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAnalytics(pathname) {\n  return async dispatch => {\n    var _data$data;\n\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ANALYTICS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async dispatch => {\n    var _data$data2;\n\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.data\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllBanks(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ALL_BANKS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllFunds(pathname) {\n  return async dispatch => {\n    var _data$data3;\n\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ALL_FUNDS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.data\n    });\n  };\n}\n\nfunction getAllLoanRequest(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ALL_LOAN_REQUESTS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getLoanRequestSetting(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_LOAN_REQUESTS_SETTINGS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getLoanBreakdown(formdata) {\n  return async dispatch => {\n    const data = await Connector.get(`/admin/loan-breakdown`, formdata);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_LOAN_BREAKDOWN,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async dispatch => {\n    var _getAdminUtils2, _getAdminUtils3, _getAdminUtils3$;\n\n    if (((_getAdminUtils2 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils2 === void 0 ? void 0 : _getAdminUtils2.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils3 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils3 === void 0 ? void 0 : (_getAdminUtils3$ = _getAdminUtils3[0]) === null || _getAdminUtils3$ === void 0 ? void 0 : _getAdminUtils3$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction AccountEnquiry(formData) {\n  return async dispatch => {\n    var _data$data4;\n\n    const data = await Connector.post(`/admin/account-enquiry`, formData);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_BANK_ACCOUNT_INQUIRY,\n      payload: data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.data\n    });\n  };\n} //fund wallet\n\n\n_c = AccountEnquiry;\n\nfunction Transfer_Funds(formData) {\n  return async dispatch => {\n    var _getAdminUtils4, _getAdminUtils4$;\n\n    if (((_getAdminUtils4 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils4 === void 0 ? void 0 : (_getAdminUtils4$ = _getAdminUtils4[0]) === null || _getAdminUtils4$ === void 0 ? void 0 : _getAdminUtils4$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/transfer-fund`, formData);\n\n      if (data) {\n        notify(\"successfull\");\n        reloadPage();\n      }\n    }\n  };\n}\n\n_c2 = Transfer_Funds;\n\nfunction registerAdmin(formData) {\n  return async dispatch => {\n    var _getAdminUtils5, _getAdminUtils5$;\n\n    if (((_getAdminUtils5 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils5 === void 0 ? void 0 : (_getAdminUtils5$ = _getAdminUtils5[0]) === null || _getAdminUtils5$ === void 0 ? void 0 : _getAdminUtils5$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-admin`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction approveSale(id) {\n  return async dispatch => {\n    var _getAdminUtils6, _getAdminUtils6$;\n\n    if (((_getAdminUtils6 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils6 === void 0 ? void 0 : (_getAdminUtils6$ = _getAdminUtils6[0]) === null || _getAdminUtils6$ === void 0 ? void 0 : _getAdminUtils6$.role_name) == \"admin\") {\n      const data = await Connector.get(`/admin/sales-order/approve/${id}`);\n\n      if (data) {\n        notify(\"successfully approved sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction rejectSale(id) {\n  return async dispatch => {\n    var _getAdminUtils7, _getAdminUtils7$;\n\n    if (((_getAdminUtils7 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils7 === void 0 ? void 0 : (_getAdminUtils7$ = _getAdminUtils7[0]) === null || _getAdminUtils7$ === void 0 ? void 0 : _getAdminUtils7$.role_name) == \"admin\") {\n      const data = await Connector.get(`/admin/sales-order/refute/${id}`);\n\n      if (data) {\n        notify(\"successfully rejected sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction createSales(formData) {\n  return async dispatch => {\n    var _getAdminUtils8, _getAdminUtils9, _getAdminUtils9$;\n\n    if (((_getAdminUtils8 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils8 === void 0 ? void 0 : _getAdminUtils8.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-sales-order`, formData);\n\n      if (data) {\n        notify(\"successfully created sales\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils9 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils9 === void 0 ? void 0 : (_getAdminUtils9$ = _getAdminUtils9[0]) === null || _getAdminUtils9$ === void 0 ? void 0 : _getAdminUtils9$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-sales-order`, formData);\n\n      if (data) {\n        notify(\"successfully created sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction createWallet(formData) {\n  return async dispatch => {\n    var _getAdminUtils10, _getAdminUtils10$;\n\n    if (((_getAdminUtils10 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils10 === void 0 ? void 0 : (_getAdminUtils10$ = _getAdminUtils10[0]) === null || _getAdminUtils10$ === void 0 ? void 0 : _getAdminUtils10$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-vfd-account`, formData);\n      notify(\"Successfully created wallet\");\n      reloadPage();\n      dispatch({\n        type: DashboardConstants.DASHBOARD_CREATE_WALLET_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : data.data\n      });\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async dispatch => {\n    var _getAdminUtils11, _getAdminUtils12, _getAdminUtils12$;\n\n    if (((_getAdminUtils11 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils11 === void 0 ? void 0 : _getAdminUtils11.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils12 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils12 === void 0 ? void 0 : (_getAdminUtils12$ = _getAdminUtils12[0]) === null || _getAdminUtils12$ === void 0 ? void 0 : _getAdminUtils12$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async dispatch => {\n    var _getAdminUtils13, _getAdminUtils14, _getAdminUtils14$;\n\n    if (((_getAdminUtils13 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils13 === void 0 ? void 0 : _getAdminUtils13.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils14 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils14 === void 0 ? void 0 : (_getAdminUtils14$ = _getAdminUtils14[0]) === null || _getAdminUtils14$ === void 0 ? void 0 : _getAdminUtils14$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async dispatch => {\n    var _getAdminUtils15, _getAdminUtils16, _getAdminUtils16$;\n\n    if (((_getAdminUtils15 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils15 === void 0 ? void 0 : _getAdminUtils15.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils16 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils16 === void 0 ? void 0 : (_getAdminUtils16$ = _getAdminUtils16[0]) === null || _getAdminUtils16$ === void 0 ? void 0 : _getAdminUtils16$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction CreateLoanRequest(formData) {\n  return async dispatch => {\n    var data = await Connector.post(`/admin/loan-request`, formData);\n\n    if (data) {\n      notify(\"successfully created loan request\");\n      reloadPage();\n    }\n  };\n}\n\n_c3 = CreateLoanRequest;\n\nfunction registerAgent(formData) {\n  return async dispatch => {\n    var _getAdminUtils17, _getAdminUtils18, _getAdminUtils18$;\n\n    if (((_getAdminUtils17 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils17 === void 0 ? void 0 : _getAdminUtils17.role_name) == \"super_admin\") {\n      var data = await Connector.post(`/super_admin/create-salesagent`, formData);\n    }\n\n    if (((_getAdminUtils18 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils18 === void 0 ? void 0 : (_getAdminUtils18$ = _getAdminUtils18[0]) === null || _getAdminUtils18$ === void 0 ? void 0 : _getAdminUtils18$.role_name) == \"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async dispatch => {\n    var _data$data5;\n\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data5 = data.data) === null || _data$data5 === void 0 ? void 0 : _data$data5.data\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getSalesInvoice(pathname) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_INVOICE_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getWalletDetails(pathname) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WALLET_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\"); // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction AdminGetOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/admin/organization`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\n_c4 = AdminGetOneOrganisation;\n\nfunction GetOnePurchase(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PURCHASE,\n      payload: data\n    });\n  };\n}\n\n_c5 = GetOnePurchase;\n\nfunction GetOneSale(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SALE,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\n_c6 = GetOneSale;\n\nfunction getOneSale(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async dispatch => {\n    var _getAdminUtils19, _getAdminUtils20, _getAdminUtils20$;\n\n    if (((_getAdminUtils19 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils19 === void 0 ? void 0 : _getAdminUtils19.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils20 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils20 === void 0 ? void 0 : (_getAdminUtils20$ = _getAdminUtils20[0]) === null || _getAdminUtils20$ === void 0 ? void 0 : _getAdminUtils20$.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneVendor(id) {\n  return async dispatch => {\n    var _getAdminUtils21, _getAdminUtils21$, _getAdminUtils22;\n\n    if (((_getAdminUtils21 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils21 === void 0 ? void 0 : (_getAdminUtils21$ = _getAdminUtils21[0]) === null || _getAdminUtils21$ === void 0 ? void 0 : _getAdminUtils21$.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils22 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils22 === void 0 ? void 0 : _getAdminUtils22.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async dispatch => {\n    var _getAdminUtils23, _getAdminUtils24, _getAdminUtils24$;\n\n    if (((_getAdminUtils23 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils23 === void 0 ? void 0 : _getAdminUtils23.role_name) == \"super_admin\") {\n      var _data$data6;\n\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data6 = data.data) === null || _data$data6 === void 0 ? void 0 : _data$data6.data\n      });\n    }\n\n    if (((_getAdminUtils24 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils24 === void 0 ? void 0 : (_getAdminUtils24$ = _getAdminUtils24[0]) === null || _getAdminUtils24$ === void 0 ? void 0 : _getAdminUtils24$.role_name) == \"admin\") {\n      var _data$data7;\n\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data7 = data.data) === null || _data$data7 === void 0 ? void 0 : _data$data7.data\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async dispatch => {\n    var _getAdminUtils25, _getAdminUtils26, _getAdminUtils26$;\n\n    if (((_getAdminUtils25 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils25 === void 0 ? void 0 : _getAdminUtils25.role_name) == \"super_admin\") {\n      var _data$data8;\n\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data8 = data.data) === null || _data$data8 === void 0 ? void 0 : _data$data8.data\n      });\n    }\n\n    if (((_getAdminUtils26 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils26 === void 0 ? void 0 : (_getAdminUtils26$ = _getAdminUtils26[0]) === null || _getAdminUtils26$ === void 0 ? void 0 : _getAdminUtils26$.role_name) == \"admin\") {\n      var _data$data9;\n\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data9 = data.data) === null || _data$data9 === void 0 ? void 0 : _data$data9.data\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerSupplier(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateVendor(formData, id) {\n  try {\n    var _getAdminUtils27, _getAdminUtils28, _getAdminUtils28$;\n\n    if (((_getAdminUtils27 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils27 === void 0 ? void 0 : _getAdminUtils27.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils28 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils28 === void 0 ? void 0 : (_getAdminUtils28$ = _getAdminUtils28[0]) === null || _getAdminUtils28$ === void 0 ? void 0 : _getAdminUtils28$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateSales(formData, id) {\n  try {\n    var _getAdminUtils29, _getAdminUtils30, _getAdminUtils30$;\n\n    if (((_getAdminUtils29 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils29 === void 0 ? void 0 : _getAdminUtils29.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils30 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils30 === void 0 ? void 0 : (_getAdminUtils30$ = _getAdminUtils30[0]) === null || _getAdminUtils30$ === void 0 ? void 0 : _getAdminUtils30$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    var _getAdminUtils31, _getAdminUtils32, _getAdminUtils32$;\n\n    if (((_getAdminUtils31 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils31 === void 0 ? void 0 : _getAdminUtils31.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils32 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils32 === void 0 ? void 0 : (_getAdminUtils32$ = _getAdminUtils32[0]) === null || _getAdminUtils32$ === void 0 ? void 0 : _getAdminUtils32$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    var _getAdminUtils33, _getAdminUtils34, _getAdminUtils34$;\n\n    if (((_getAdminUtils33 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils33 === void 0 ? void 0 : _getAdminUtils33.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils34 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils34 === void 0 ? void 0 : (_getAdminUtils34$ = _getAdminUtils34[0]) === null || _getAdminUtils34$ === void 0 ? void 0 : _getAdminUtils34$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateDriver(formData, id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils35, _getAdminUtils36, _getAdminUtils36$;\n\n      if (((_getAdminUtils35 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils35 === void 0 ? void 0 : _getAdminUtils35.role_name) == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils36 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils36 === void 0 ? void 0 : (_getAdminUtils36$ = _getAdminUtils36[0]) === null || _getAdminUtils36$ === void 0 ? void 0 : _getAdminUtils36$.role_name) == \"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils37, _getAdminUtils38, _getAdminUtils38$;\n\n      if (((_getAdminUtils37 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils37 === void 0 ? void 0 : _getAdminUtils37.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils38 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils38 === void 0 ? void 0 : (_getAdminUtils38$ = _getAdminUtils38[0]) === null || _getAdminUtils38$ === void 0 ? void 0 : _getAdminUtils38$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteSales(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils39, _getAdminUtils40, _getAdminUtils40$;\n\n      if (((_getAdminUtils39 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils39 === void 0 ? void 0 : _getAdminUtils39.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils40 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils40 === void 0 ? void 0 : (_getAdminUtils40$ = _getAdminUtils40[0]) === null || _getAdminUtils40$ === void 0 ? void 0 : _getAdminUtils40$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/sales-order/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteDriver(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils41, _getAdminUtils42, _getAdminUtils42$;\n\n      if (((_getAdminUtils41 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils41 === void 0 ? void 0 : _getAdminUtils41.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils42 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils42 === void 0 ? void 0 : (_getAdminUtils42$ = _getAdminUtils42[0]) === null || _getAdminUtils42$ === void 0 ? void 0 : _getAdminUtils42$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deletePurchase(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils43, _getAdminUtils44, _getAdminUtils44$;\n\n      if (((_getAdminUtils43 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils43 === void 0 ? void 0 : _getAdminUtils43.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils44 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils44 === void 0 ? void 0 : (_getAdminUtils44$ = _getAdminUtils44[0]) === null || _getAdminUtils44$ === void 0 ? void 0 : _getAdminUtils44$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils45, _getAdminUtils46, _getAdminUtils46$;\n\n      if (((_getAdminUtils45 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils45 === void 0 ? void 0 : _getAdminUtils45.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils46 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils46 === void 0 ? void 0 : (_getAdminUtils46$ = _getAdminUtils46[0]) === null || _getAdminUtils46$ === void 0 ? void 0 : _getAdminUtils46$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateInventory(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    var _getAdminUtils47, _getAdminUtils48, _getAdminUtils48$;\n\n    if (((_getAdminUtils47 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils47 === void 0 ? void 0 : _getAdminUtils47.role_name) == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async dispatch => {\n        const data = await ConnectForms.post(`/super_admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n          reloadPage();\n        }\n      };\n    }\n\n    if (((_getAdminUtils48 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils48 === void 0 ? void 0 : (_getAdminUtils48$ = _getAdminUtils48[0]) === null || _getAdminUtils48$ === void 0 ? void 0 : _getAdminUtils48$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminUpdateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/admin/update-organization`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\n_c7 = AdminUpdateOrganisation;\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/organization/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/super_admin/create-organization`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully created organisation\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n\n      if (data) {\n        notify(\"successfully approved\");\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminApproveUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/admin/approve-user/${id}`);\n\n      if (data) {\n        notify(\"successfully approved\");\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\n_c8 = AdminApproveUser;\n\nfunction AdminRejectUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/admin/refute-user/${id}`);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully rejected\");\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\n_c9 = AdminRejectUser;\n\nfunction rejectUser(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils49, _getAdminUtils50;\n\n      if (((_getAdminUtils49 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils49 === void 0 ? void 0 : _getAdminUtils49.role_name) == \"super_admin\") {\n        const data = await Connector.get(`/super_admin/refute-user/${id}`);\n        console.log(data);\n\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n\n      if (((_getAdminUtils50 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils50 === void 0 ? void 0 : _getAdminUtils50.role_name) == \"admin\") {\n        const data = await Connector.get(`/admin/refute-user/${id}`);\n        console.log(data);\n\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async dispatch => {\n      var _data$data10;\n\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data10 = data.data) === null || _data$data10 === void 0 ? void 0 : _data$data10.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async dispatch => {\n      var _data$data11;\n\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data11 = data.data) === null || _data$data11 === void 0 ? void 0 : _data$data11.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.post(`/admin/product/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updatePurchase(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.put(`/admin/purchase/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/admin/product/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/admin/salesagent/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction uploadFile(api, imageData) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.post(`${api}`, imageData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully uploaded\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"AccountEnquiry\");\n$RefreshReg$(_c2, \"Transfer_Funds\");\n$RefreshReg$(_c3, \"CreateLoanRequest\");\n$RefreshReg$(_c4, \"AdminGetOneOrganisation\");\n$RefreshReg$(_c5, \"GetOnePurchase\");\n$RefreshReg$(_c6, \"GetOneSale\");\n$RefreshReg$(_c7, \"AdminUpdateOrganisation\");\n$RefreshReg$(_c8, \"AdminApproveUser\");\n$RefreshReg$(_c9, \"AdminRejectUser\");","map":{"version":3,"sources":["/Users/frontenddev/Documents/FC INVENTORY/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","reloadPage","arrayMutators","FieldArray","notify","ConnectForms","dashboardActions","getDashboardStats","getAllRoles","registerOrganisation","getAllOrganisation","registerClient","registerStaff","getAllDrugs","getAllAgentsCategories","createDrug","getOneOrganisation","getOneUser","editStaff","getAllManufacturers","getOneManufacturer","registerManufacturer","updateManufacturer","updateSuppliers","getAllSuppliers","registerSupplier","getOneSupplier","updateOrganisation","AdminUpdateOrganisation","GetOnePurchase","getAllInventory","updateProducts","getOneProduct","createInventory","updateInventory","getOneInventory","updateVendor","updateAgent","deleteOrganisation","getAllWarehouses","getDashboardProducts","getAllAgents","getAllCustomers","createProducts","registerCustomer","registerAgent","deleteProducts","getOneCustomer","updateCustomer","deleteCustomer","AdminGetOneOrganisation","deleteVendor","getOneAgent","deleteDriver","deleteAgent","getAllVendors","getOneVendor","addVendor","deletePurchase","registerPurchase","getAllSales","getDrivers","registerDriver","getOneDriver","updateDriver","getAwaitingApproval","rejectUser","approveUser","AdminRejectUser","getAllPurchases","deleteSales","updatePurchase","createSales","updateSales","AdminApproveUser","GetOneSale","getAnalytics","uploadFile","registerAdmin","approveSale","rejectSale","getSalesInvoice","getWalletDetails","createWallet","Transfer_Funds","getAllBanks","getAllFunds","AccountEnquiry","getAllLoanRequest","getLoanRequestSetting","getLoanBreakdown","CreateLoanRequest","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","pathname","DASHBOARD_PURCHASE_SUCCESS","DASHBOARD_ANALYTICS_SUCCESS","DASHBOARD_ORGANISATIONS_SUCCESS","DASHBOARD_AWAITING_APPROVAL_SUCCESS","DASHBOARD_AGENTS_SUCCESS","DASHBOARD_CUSTOMERS_SUCCESS","DASHBOARD_VENDORS_SUCCESS","DASHBOARD_DRIVERS_SUCCESS","DASHBOARD_ALL_BANKS_SUCCESS","DASHBOARD_ALL_FUNDS","DASHBOARD_ALL_LOAN_REQUESTS","DASHBOARD_LOAN_REQUESTS_SETTINGS","formdata","DASHBOARD_LOAN_BREAKDOWN","formData","role_name","post","DASHBOARD_BANK_ACCOUNT_INQUIRY","id","DASHBOARD_CREATE_WALLET_SUCCESS","DASHBOARD_SALES_SUCCESS","DASHBOARD_WAREHOUSES_SUCCESS","path","DASHBOARD_PRODUCTS_SUCCESS","DASHBOARD_ROLES_SUCCESS","DASHBOARD_INVOICE_SUCCESS","DASHBOARD_WALLET_SUCCESS","put","err","DASHBOARD_GET_ONE_ORGANISATION","DASHBOARD_GET_ONE_PURCHASE","DASHBOARD_GET_SALE","getOneSale","DASHBOARD_GET_ONE_AGENT","DASHBOARD_GET_ONE_VENDOR","DASHBOARD_GET_ONE_INVENTORY","DASHBOARD_GET_ONE_USER","DASHBOARD_GETONE_CUSTOMERS_SUCCESS","DASHBOARD_GETONE_DRIVER_SUCCESS","DASHBOARD_GET_DRUGS_SUCCESS","DASHBOARD_GET_DRUGS_CATEGORY","DASHBOARD_GET_MANUFACTURERS","DASHBOARD_GET_SUPLIERS","DASHBOARD_GET_INVENTORY","DASHBOARD_GET_ONE_MANUFACTURER","DASHBOARD_GET_ONE_PRODUCT","DASHBOARD_GET_ONE_SUPPLIER","delete","api","imageData"],"mappings":"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","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  AdminUpdateOrganisation,\n  GetOnePurchase,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  AdminGetOneOrganisation,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  AdminRejectUser,\n  getAllPurchases,\n  deleteSales,\n  updatePurchase,\n  createSales,\n  updateSales,\n  AdminApproveUser,\n  GetOneSale,\n  getAnalytics,\n  uploadFile,\n  registerAdmin,\n  approveSale,\n  rejectSale,\n  getSalesInvoice,\n  getWalletDetails,\n  createWallet,\n  Transfer_Funds,\n  getAllBanks,\n  getAllFunds,\n  AccountEnquiry,\n  getAllLoanRequest,\n  getLoanRequestSetting,\n  getLoanBreakdown,\n  CreateLoanRequest\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId;\n  console.log(organization_id);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAnalytics(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ANALYTICS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async (dispatch) => {\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllBanks(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ALL_BANKS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllFunds(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ALL_FUNDS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllLoanRequest(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ALL_LOAN_REQUESTS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getLoanRequestSetting(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_LOAN_REQUESTS_SETTINGS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getLoanBreakdown(formdata) {\n  return async (dispatch) => {\n    const data = await Connector.get(`/admin/loan-breakdown`,formdata);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_LOAN_BREAKDOWN,\n      payload: data?.data,\n    });\n  };\n}\n\n\nfunction registerCustomer(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-customer`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction AccountEnquiry(formData) {\n    return async (dispatch) => {\n      const data = await Connector.post(`/admin/account-enquiry`,formData);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_BANK_ACCOUNT_INQUIRY,\n        payload: data?.data?.data,\n      });\n    }\n}\n\n//fund wallet\nfunction Transfer_Funds(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/transfer-fund`, formData);\n      if (data) {\n        notify(\"successfull\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAdmin(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-admin`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction approveSale(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/sales-order/approve/${id}`);\n      if (data) {\n        notify(\"successfully approved sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction rejectSale(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/sales-order/refute/${id}`);\n      if (data) {\n        notify(\"successfully rejected sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction createSales(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-sales-order`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully created sales\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-sales-order`, formData);\n      if (data) {\n        notify(\"successfully created sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction createWallet(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-vfd-account`, formData);\n      notify(\"Successfully created wallet\");\n      reloadPage();\n      dispatch({\n        type: DashboardConstants.DASHBOARD_CREATE_WALLET_SUCCESS,\n        payload: data?.data,\n      });\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-purchase`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\nfunction CreateLoanRequest(formData) {\n  return async (dispatch) => {\n      var data = await Connector.post(`/admin/loan-request`, formData);\n    if (data) {\n      notify(\"successfully created loan request\");\n      reloadPage();\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      var data = await Connector.post(\n        `/super_admin/create-salesagent`,\n        formData\n      );\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async (dispatch) => {\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data,\n    });\n  };\n}\nfunction getSalesInvoice(pathname) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_INVOICE_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getWalletDetails(pathname) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WALLET_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\nfunction AdminGetOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/admin/organization`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction GetOnePurchase(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PURCHASE,\n      payload: data,\n    });\n  };\n}\nfunction GetOneSale(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SALE,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getOneSale(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n  };\n}\nfunction getOneVendor(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data,\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction registerSupplier(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateVendor(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateSales(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/salesagent/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/customer/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateDriver(formData, id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\nfunction deleteSales(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/sales-order/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteDriver(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deletePurchase(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateInventory(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async (dispatch) => {\n        const data = await ConnectForms.post(\n          `/super_admin/create-product`,\n          formData\n        );\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n          reloadPage();\n        }\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminUpdateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/admin/update-organization`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(\n        `/super_admin/organization/${id}`,\n        formData\n      );\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(\n        `/super_admin/create-organization`,\n        formData\n      );\n      console.log(data);\n      if (data) {\n        notify(\"successfully created organisation\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n      if (data) {\n        notify(\"successfully approved\");\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminApproveUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/admin/approve-user/${id}`);\n      if (data) {\n        notify(\"successfully approved\");\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminRejectUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/admin/refute-user/${id}`);\n      console.log(data);\n      if (data) {\n        notify(\"successfully rejected\");\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction rejectUser(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.get(`/super_admin/refute-user/${id}`);\n        console.log(data);\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n      if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n        const data = await Connector.get(`/admin/refute-user/${id}`);\n        console.log(data);\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.post(`/admin/product/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updatePurchase(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.put(`/admin/purchase/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/admin/product/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/admin/salesagent/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction uploadFile(api, imageData) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.post(`${api}`, imageData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully uploaded\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}