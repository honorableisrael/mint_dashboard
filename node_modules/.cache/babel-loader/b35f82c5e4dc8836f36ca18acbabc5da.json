{"ast":null,"code":"import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  AdminUpdateOrganisation,\n  GetOnePurchase,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  AdminGetOneOrganisation,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  AdminRejectUser,\n  getAllPurchases,\n  deleteSales,\n  updatePurchase,\n  createSales,\n  updateSales,\n  AdminApproveUser,\n  GetOneSale,\n  getAnalytics,\n  uploadFile,\n  registerAdmin,\n  approveSale\n};\n\nfunction getDashboardStats() {\n  var _getAdminUtils;\n\n  const organization_id = (_getAdminUtils = getAdminUtils(\"admin_data\")) === null || _getAdminUtils === void 0 ? void 0 : _getAdminUtils.organisationId;\n  console.log(organization_id);\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAnalytics(pathname) {\n  return async dispatch => {\n    var _data$data;\n\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ANALYTICS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async dispatch => {\n    var _data$data2;\n\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.data\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async dispatch => {\n    var _getAdminUtils2, _getAdminUtils3, _getAdminUtils3$;\n\n    if (((_getAdminUtils2 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils2 === void 0 ? void 0 : _getAdminUtils2.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils3 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils3 === void 0 ? void 0 : (_getAdminUtils3$ = _getAdminUtils3[0]) === null || _getAdminUtils3$ === void 0 ? void 0 : _getAdminUtils3$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAdmin(formData) {\n  return async dispatch => {\n    var _getAdminUtils4, _getAdminUtils4$;\n\n    if (((_getAdminUtils4 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils4 === void 0 ? void 0 : (_getAdminUtils4$ = _getAdminUtils4[0]) === null || _getAdminUtils4$ === void 0 ? void 0 : _getAdminUtils4$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-admin`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction approveSale(id) {\n  return async dispatch => {\n    var _getAdminUtils5, _getAdminUtils5$;\n\n    if (((_getAdminUtils5 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils5 === void 0 ? void 0 : (_getAdminUtils5$ = _getAdminUtils5[0]) === null || _getAdminUtils5$ === void 0 ? void 0 : _getAdminUtils5$.role_name) == \"admin\") {\n      const data = await Connector.get(`/admin/sales-order/approve/${id}`);\n\n      if (data) {\n        notify(\"successfully approved sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction createSales(formData) {\n  return async dispatch => {\n    var _getAdminUtils6, _getAdminUtils7, _getAdminUtils7$;\n\n    if (((_getAdminUtils6 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils6 === void 0 ? void 0 : _getAdminUtils6.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-sales-order`, formData);\n\n      if (data) {\n        notify(\"successfully created sales\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils7 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils7 === void 0 ? void 0 : (_getAdminUtils7$ = _getAdminUtils7[0]) === null || _getAdminUtils7$ === void 0 ? void 0 : _getAdminUtils7$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-sales-order`, formData);\n\n      if (data) {\n        notify(\"successfully created sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async dispatch => {\n    var _getAdminUtils8, _getAdminUtils9, _getAdminUtils9$;\n\n    if (((_getAdminUtils8 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils8 === void 0 ? void 0 : _getAdminUtils8.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils9 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils9 === void 0 ? void 0 : (_getAdminUtils9$ = _getAdminUtils9[0]) === null || _getAdminUtils9$ === void 0 ? void 0 : _getAdminUtils9$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async dispatch => {\n    var _getAdminUtils10, _getAdminUtils11, _getAdminUtils11$;\n\n    if (((_getAdminUtils10 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils10 === void 0 ? void 0 : _getAdminUtils10.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils11 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils11 === void 0 ? void 0 : (_getAdminUtils11$ = _getAdminUtils11[0]) === null || _getAdminUtils11$ === void 0 ? void 0 : _getAdminUtils11$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async dispatch => {\n    var _getAdminUtils12, _getAdminUtils13, _getAdminUtils13$;\n\n    if (((_getAdminUtils12 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils12 === void 0 ? void 0 : _getAdminUtils12.role_name) == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n\n    if (((_getAdminUtils13 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils13 === void 0 ? void 0 : (_getAdminUtils13$ = _getAdminUtils13[0]) === null || _getAdminUtils13$ === void 0 ? void 0 : _getAdminUtils13$.role_name) == \"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async dispatch => {\n    var _getAdminUtils14, _getAdminUtils15, _getAdminUtils15$;\n\n    if (((_getAdminUtils14 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils14 === void 0 ? void 0 : _getAdminUtils14.role_name) == \"super_admin\") {\n      var data = await Connector.post(`/super_admin/create-salesagent`, formData);\n    }\n\n    if (((_getAdminUtils15 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils15 === void 0 ? void 0 : (_getAdminUtils15$ = _getAdminUtils15[0]) === null || _getAdminUtils15$ === void 0 ? void 0 : _getAdminUtils15$.role_name) == \"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async dispatch => {\n    var _data$data3;\n\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.data\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\"); // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction AdminGetOneOrganisation(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/admin/organization`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\n_c = AdminGetOneOrganisation;\n\nfunction GetOnePurchase(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PURCHASE,\n      payload: data\n    });\n  };\n}\n\n_c2 = GetOnePurchase;\n\nfunction GetOneSale(pathname) {\n  return async dispatch => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SALE,\n      payload: data === null || data === void 0 ? void 0 : data.data\n    });\n  };\n}\n\n_c3 = GetOneSale;\n\nfunction getOneSale(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async dispatch => {\n    var _getAdminUtils16, _getAdminUtils17, _getAdminUtils17$;\n\n    if (((_getAdminUtils16 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils16 === void 0 ? void 0 : _getAdminUtils16.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils17 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils17 === void 0 ? void 0 : (_getAdminUtils17$ = _getAdminUtils17[0]) === null || _getAdminUtils17$ === void 0 ? void 0 : _getAdminUtils17$.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneVendor(id) {\n  return async dispatch => {\n    var _getAdminUtils18, _getAdminUtils18$, _getAdminUtils19;\n\n    if (((_getAdminUtils18 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils18 === void 0 ? void 0 : (_getAdminUtils18$ = _getAdminUtils18[0]) === null || _getAdminUtils18$ === void 0 ? void 0 : _getAdminUtils18$.role_name) == \"admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n\n    if (((_getAdminUtils19 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils19 === void 0 ? void 0 : _getAdminUtils19.role_name) == \"super_admin\") {\n      const {\n        data: {\n          data\n        }\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async dispatch => {\n    var _getAdminUtils20, _getAdminUtils21, _getAdminUtils21$;\n\n    if (((_getAdminUtils20 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils20 === void 0 ? void 0 : _getAdminUtils20.role_name) == \"super_admin\") {\n      var _data$data4;\n\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.data\n      });\n    }\n\n    if (((_getAdminUtils21 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils21 === void 0 ? void 0 : (_getAdminUtils21$ = _getAdminUtils21[0]) === null || _getAdminUtils21$ === void 0 ? void 0 : _getAdminUtils21$.role_name) == \"admin\") {\n      var _data$data5;\n\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data5 = data.data) === null || _data$data5 === void 0 ? void 0 : _data$data5.data\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async dispatch => {\n    var _getAdminUtils22, _getAdminUtils23, _getAdminUtils23$;\n\n    if (((_getAdminUtils22 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils22 === void 0 ? void 0 : _getAdminUtils22.role_name) == \"super_admin\") {\n      var _data$data6;\n\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data6 = data.data) === null || _data$data6 === void 0 ? void 0 : _data$data6.data\n      });\n    }\n\n    if (((_getAdminUtils23 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils23 === void 0 ? void 0 : (_getAdminUtils23$ = _getAdminUtils23[0]) === null || _getAdminUtils23$ === void 0 ? void 0 : _getAdminUtils23$.role_name) == \"admin\") {\n      var _data$data7;\n\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data === null || data === void 0 ? void 0 : (_data$data7 = data.data) === null || _data$data7 === void 0 ? void 0 : _data$data7.data\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async dispatch => {\n    const {\n      data: {\n        data\n      }\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerSupplier(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateVendor(formData, id) {\n  try {\n    var _getAdminUtils24, _getAdminUtils25, _getAdminUtils25$;\n\n    if (((_getAdminUtils24 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils24 === void 0 ? void 0 : _getAdminUtils24.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils25 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils25 === void 0 ? void 0 : (_getAdminUtils25$ = _getAdminUtils25[0]) === null || _getAdminUtils25$ === void 0 ? void 0 : _getAdminUtils25$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateSales(formData, id) {\n  try {\n    var _getAdminUtils26, _getAdminUtils27, _getAdminUtils27$;\n\n    if (((_getAdminUtils26 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils26 === void 0 ? void 0 : _getAdminUtils26.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils27 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils27 === void 0 ? void 0 : (_getAdminUtils27$ = _getAdminUtils27[0]) === null || _getAdminUtils27$ === void 0 ? void 0 : _getAdminUtils27$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    var _getAdminUtils28, _getAdminUtils29, _getAdminUtils29$;\n\n    if (((_getAdminUtils28 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils28 === void 0 ? void 0 : _getAdminUtils28.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils29 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils29 === void 0 ? void 0 : (_getAdminUtils29$ = _getAdminUtils29[0]) === null || _getAdminUtils29$ === void 0 ? void 0 : _getAdminUtils29$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    var _getAdminUtils30, _getAdminUtils31, _getAdminUtils31$;\n\n    if (((_getAdminUtils30 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils30 === void 0 ? void 0 : _getAdminUtils30.role_name) == \"super_admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/super_admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n\n    if (((_getAdminUtils31 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils31 === void 0 ? void 0 : (_getAdminUtils31$ = _getAdminUtils31[0]) === null || _getAdminUtils31$ === void 0 ? void 0 : _getAdminUtils31$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateDriver(formData, id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils32, _getAdminUtils33, _getAdminUtils33$;\n\n      if (((_getAdminUtils32 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils32 === void 0 ? void 0 : _getAdminUtils32.role_name) == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils33 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils33 === void 0 ? void 0 : (_getAdminUtils33$ = _getAdminUtils33[0]) === null || _getAdminUtils33$ === void 0 ? void 0 : _getAdminUtils33$.role_name) == \"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils34, _getAdminUtils35, _getAdminUtils35$;\n\n      if (((_getAdminUtils34 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils34 === void 0 ? void 0 : _getAdminUtils34.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils35 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils35 === void 0 ? void 0 : (_getAdminUtils35$ = _getAdminUtils35[0]) === null || _getAdminUtils35$ === void 0 ? void 0 : _getAdminUtils35$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteSales(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils36, _getAdminUtils37, _getAdminUtils37$;\n\n      if (((_getAdminUtils36 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils36 === void 0 ? void 0 : _getAdminUtils36.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils37 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils37 === void 0 ? void 0 : (_getAdminUtils37$ = _getAdminUtils37[0]) === null || _getAdminUtils37$ === void 0 ? void 0 : _getAdminUtils37$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/sales-order/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteDriver(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils38, _getAdminUtils39, _getAdminUtils39$;\n\n      if (((_getAdminUtils38 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils38 === void 0 ? void 0 : _getAdminUtils38.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils39 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils39 === void 0 ? void 0 : (_getAdminUtils39$ = _getAdminUtils39[0]) === null || _getAdminUtils39$ === void 0 ? void 0 : _getAdminUtils39$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deletePurchase(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils40, _getAdminUtils41, _getAdminUtils41$;\n\n      if (((_getAdminUtils40 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils40 === void 0 ? void 0 : _getAdminUtils40.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils41 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils41 === void 0 ? void 0 : (_getAdminUtils41$ = _getAdminUtils41[0]) === null || _getAdminUtils41$ === void 0 ? void 0 : _getAdminUtils41$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils42, _getAdminUtils43, _getAdminUtils43$;\n\n      if (((_getAdminUtils42 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils42 === void 0 ? void 0 : _getAdminUtils42.role_name) == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n\n      if (((_getAdminUtils43 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils43 === void 0 ? void 0 : (_getAdminUtils43$ = _getAdminUtils43[0]) === null || _getAdminUtils43$ === void 0 ? void 0 : _getAdminUtils43$.role_name) == \"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateInventory(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    var _getAdminUtils44, _getAdminUtils45, _getAdminUtils45$;\n\n    if (((_getAdminUtils44 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils44 === void 0 ? void 0 : _getAdminUtils44.role_name) == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async dispatch => {\n        const data = await ConnectForms.post(`/super_admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n          reloadPage();\n        }\n      };\n    }\n\n    if (((_getAdminUtils45 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils45 === void 0 ? void 0 : (_getAdminUtils45$ = _getAdminUtils45[0]) === null || _getAdminUtils45$ === void 0 ? void 0 : _getAdminUtils45$.role_name) == \"admin\") {\n      return async dispatch => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminUpdateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/admin/update-organization`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\n_c4 = AdminUpdateOrganisation;\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.put(`/super_admin/organization/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async dispatch => {\n      const data = await Connector.post(`/super_admin/create-organization`, formData);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully created organisation\");\n      } // reloadPage();\n\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n\n      if (data) {\n        notify(\"successfully approved\");\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminApproveUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/admin/approve-user/${id}`);\n\n      if (data) {\n        notify(\"successfully approved\");\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\n_c5 = AdminApproveUser;\n\nfunction AdminRejectUser(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.get(`/admin/refute-user/${id}`);\n      console.log(data);\n\n      if (data) {\n        notify(\"successfully rejected\");\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\n_c6 = AdminRejectUser;\n\nfunction rejectUser(id) {\n  try {\n    return async dispatch => {\n      var _getAdminUtils46, _getAdminUtils47;\n\n      if (((_getAdminUtils46 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils46 === void 0 ? void 0 : _getAdminUtils46.role_name) == \"super_admin\") {\n        const data = await Connector.get(`/super_admin/refute-user/${id}`);\n        console.log(data);\n\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n\n      if (((_getAdminUtils47 = getAdminUtils(\"admin_data\")) === null || _getAdminUtils47 === void 0 ? void 0 : _getAdminUtils47.role_name) == \"admin\") {\n        const data = await Connector.get(`/admin/refute-user/${id}`);\n        console.log(data);\n\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async dispatch => {\n      var _data$data8;\n\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data8 = data.data) === null || _data$data8 === void 0 ? void 0 : _data$data8.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async dispatch => {\n      var _data$data9;\n\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data === null || data === void 0 ? void 0 : (_data$data9 = data.data) === null || _data$data9 === void 0 ? void 0 : _data$data9.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.post(`/admin/product/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updatePurchase(formData, id) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.put(`/admin/purchase/${id}`, formData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/admin/product/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async dispatch => {\n      const data = await Connector.delete(`/admin/salesagent/${id}`);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction uploadFile(api, imageData) {\n  try {\n    return async dispatch => {\n      const data = await ConnectForms.post(`${api}`, imageData);\n\n      if (data) {\n        console.log(data);\n        notify(\"Successfully uploaded\"); // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AdminGetOneOrganisation\");\n$RefreshReg$(_c2, \"GetOnePurchase\");\n$RefreshReg$(_c3, \"GetOneSale\");\n$RefreshReg$(_c4, \"AdminUpdateOrganisation\");\n$RefreshReg$(_c5, \"AdminApproveUser\");\n$RefreshReg$(_c6, \"AdminRejectUser\");","map":{"version":3,"sources":["/Users/frontenddev/Documents/FC INVENTORY/src/Actions/dashboard.action.js"],"names":["DashboardConstants","Connector","getAdminUtils","reloadPage","arrayMutators","FieldArray","notify","ConnectForms","dashboardActions","getDashboardStats","getAllRoles","registerOrganisation","getAllOrganisation","registerClient","registerStaff","getAllDrugs","getAllAgentsCategories","createDrug","getOneOrganisation","getOneUser","editStaff","getAllManufacturers","getOneManufacturer","registerManufacturer","updateManufacturer","updateSuppliers","getAllSuppliers","registerSupplier","getOneSupplier","updateOrganisation","AdminUpdateOrganisation","GetOnePurchase","getAllInventory","updateProducts","getOneProduct","createInventory","updateInventory","getOneInventory","updateVendor","updateAgent","deleteOrganisation","getAllWarehouses","getDashboardProducts","getAllAgents","getAllCustomers","createProducts","registerCustomer","registerAgent","deleteProducts","getOneCustomer","updateCustomer","deleteCustomer","AdminGetOneOrganisation","deleteVendor","getOneAgent","deleteDriver","deleteAgent","getAllVendors","getOneVendor","addVendor","deletePurchase","registerPurchase","getAllSales","getDrivers","registerDriver","getOneDriver","updateDriver","getAwaitingApproval","rejectUser","approveUser","AdminRejectUser","getAllPurchases","deleteSales","updatePurchase","createSales","updateSales","AdminApproveUser","GetOneSale","getAnalytics","uploadFile","registerAdmin","approveSale","organization_id","organisationId","console","log","dispatch","data","get","type","DASHBOARD_STATS_SUCCESS","payload","pathname","DASHBOARD_PURCHASE_SUCCESS","DASHBOARD_ANALYTICS_SUCCESS","DASHBOARD_ORGANISATIONS_SUCCESS","DASHBOARD_AWAITING_APPROVAL_SUCCESS","DASHBOARD_AGENTS_SUCCESS","DASHBOARD_CUSTOMERS_SUCCESS","DASHBOARD_VENDORS_SUCCESS","DASHBOARD_DRIVERS_SUCCESS","formData","role_name","post","id","DASHBOARD_SALES_SUCCESS","DASHBOARD_WAREHOUSES_SUCCESS","path","DASHBOARD_PRODUCTS_SUCCESS","DASHBOARD_ROLES_SUCCESS","put","err","DASHBOARD_GET_ONE_ORGANISATION","DASHBOARD_GET_ONE_PURCHASE","DASHBOARD_GET_SALE","getOneSale","DASHBOARD_GET_ONE_AGENT","DASHBOARD_GET_ONE_VENDOR","DASHBOARD_GET_ONE_INVENTORY","DASHBOARD_GET_ONE_USER","DASHBOARD_GETONE_CUSTOMERS_SUCCESS","DASHBOARD_GETONE_DRIVER_SUCCESS","DASHBOARD_GET_DRUGS_SUCCESS","DASHBOARD_GET_DRUGS_CATEGORY","DASHBOARD_GET_MANUFACTURERS","DASHBOARD_GET_SUPLIERS","DASHBOARD_GET_INVENTORY","DASHBOARD_GET_ONE_MANUFACTURER","DASHBOARD_GET_ONE_PRODUCT","DASHBOARD_GET_ONE_SUPPLIER","delete","api","imageData"],"mappings":"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","sourcesContent":["import { DashboardConstants } from \"../constants/AdminConstants\";\nimport Connector from \"../Components/Services/services\";\nimport { getAdminUtils, reloadPage } from \"../Components/Services/helper\";\nimport arrayMutators from \"final-form-arrays\";\nimport { FieldArray } from \"react-final-form-arrays\";\nimport { notify } from \"../config\";\nimport ConnectForms from \"../Components/Services/ConnectForms\";\n\nexport const dashboardActions = {\n  getDashboardStats,\n  getAllRoles,\n  registerOrganisation,\n  getAllOrganisation,\n  registerClient,\n  registerStaff,\n  getAllDrugs,\n  getAllAgentsCategories,\n  createDrug,\n  getOneOrganisation,\n  getOneUser,\n  editStaff,\n  getAllManufacturers,\n  getOneManufacturer,\n  registerManufacturer,\n  updateManufacturer,\n  updateSuppliers,\n  getAllSuppliers,\n  registerSupplier,\n  getOneSupplier,\n  updateOrganisation,\n  AdminUpdateOrganisation,\n  GetOnePurchase,\n  getAllInventory,\n  updateProducts,\n  getOneProduct,\n  createInventory,\n  updateInventory,\n  getOneInventory,\n  updateVendor,\n  updateAgent,\n  deleteOrganisation,\n  getAllWarehouses,\n  getDashboardProducts,\n  getAllAgents,\n  getAllCustomers,\n  createProducts,\n  registerCustomer,\n  registerAgent,\n  deleteProducts,\n  getOneCustomer,\n  updateCustomer,\n  deleteCustomer,\n  AdminGetOneOrganisation,\n  deleteVendor,\n  getOneAgent,\n  deleteDriver,\n  deleteAgent,\n  getAllVendors,\n  getOneVendor,\n  addVendor,\n  deletePurchase,\n  registerPurchase,\n  getAllSales,\n  getDrivers,\n  registerDriver,\n  getOneDriver,\n  updateDriver,\n  getAwaitingApproval,\n  rejectUser,\n  approveUser,\n  AdminRejectUser,\n  getAllPurchases,\n  deleteSales,\n  updatePurchase,\n  createSales,\n  updateSales,\n  AdminApproveUser,\n  GetOneSale,\n  getAnalytics,\n  uploadFile,\n  registerAdmin,\n  approveSale,\n};\n\nfunction getDashboardStats() {\n  const organization_id = getAdminUtils(\"admin_data\")?.organisationId;\n  console.log(organization_id);\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/organisations/${organization_id}/clients`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_STATS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllPurchases(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PURCHASE_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\nfunction getAnalytics(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ANALYTICS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllOrganisation() {\n  return async (dispatch) => {\n    const data = await Connector.get(`/get-organizations?per_page=${1}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ORGANISATIONS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAwaitingApproval(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AWAITING_APPROVAL_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllAgents(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_AGENTS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllCustomers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_CUSTOMERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllVendors(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_VENDORS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getDrivers(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_DRIVERS_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction registerCustomer(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-customer`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-customer`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\nfunction registerAdmin(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-admin`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\n\nfunction approveSale(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/sales-order/approve/${id}`);\n      if (data) {\n        notify(\"successfully approved sale\");\n        reloadPage();\n      }\n    }\n  };\n}\nfunction createSales(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-sales-order`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully created sales\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-sales-order`, formData);\n      if (data) {\n        notify(\"successfully created sale\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerPurchase(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(\n        `/super_admin/create-purchase`,\n        formData\n      );\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-purchase`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction addVendor(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-vendor`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerDriver(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.post(`/super_admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.post(`/admin/create-driver`, formData);\n      if (data) {\n        notify(\"successfully registered\");\n        reloadPage();\n      }\n    }\n  };\n}\n\nfunction registerAgent(formData) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      var data = await Connector.post(\n        `/super_admin/create-salesagent`,\n        formData\n      );\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      var data = await Connector.post(`/admin/create-salesagent`, formData);\n    }\n    if (data) {\n      notify(\"successfully registered\");\n      reloadPage();\n    }\n  };\n}\n\nfunction getAllSales(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_SALES_SUCCESS,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getAllWarehouses(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/all-warehouses/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_WAREHOUSES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getDashboardProducts(path) {\n  return async (dispatch) => {\n    console.log(\"here\");\n    const data = await Connector.get(`${path}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_PRODUCTS_SUCCESS,\n      payload: data?.data?.data,\n    });\n  };\n}\n\nfunction getAllRoles() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/roles`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_ROLES_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction editStaff(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/users/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      // reloadPage()\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction getOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\nfunction AdminGetOneOrganisation(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/admin/organization`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction GetOnePurchase(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PURCHASE,\n      payload: data,\n    });\n  };\n}\nfunction GetOneSale(pathname) {\n  return async (dispatch) => {\n    const data = await Connector.get(`${pathname}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SALE,\n      payload: data?.data,\n    });\n  };\n}\n\nfunction getOneSale(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/super_admin/organization/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_ORGANISATION,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneAgent(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/salesagent/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_AGENT,\n        payload: data,\n      });\n    }\n  };\n}\nfunction getOneVendor(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const {\n        data: { data },\n      } = await Connector.get(`/super_admin/vendor/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GET_ONE_VENDOR,\n        payload: data,\n      });\n    }\n  };\n}\n\nfunction getOneInventory(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneUser(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/users/${id}`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_USER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneCustomer(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/customer/${id}`);\n      console.log(data);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_CUSTOMERS_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getOneDriver(id) {\n  return async (dispatch) => {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      const data = await Connector.get(`/super_admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      const data = await Connector.get(`/admin/driver/${id}`);\n      dispatch({\n        type: DashboardConstants.DASHBOARD_GETONE_DRIVER_SUCCESS,\n        payload: data?.data?.data,\n      });\n    }\n  };\n}\n\nfunction getAllDrugs() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugs`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_SUCCESS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllAgentsCategories() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/drugscategories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_DRUGS_CATEGORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllManufacturers(pathname) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(pathname);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_MANUFACTURERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllSuppliers() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_SUPLIERS,\n      payload: data,\n    });\n  };\n}\n\nfunction getAllInventory() {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/inventories`);\n    console.log(data);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_INVENTORY,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneManufacturer(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/manufacturers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_MANUFACTURER,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneProduct(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/admin/product/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_PRODUCT,\n      payload: data,\n    });\n  };\n}\n\nfunction getOneSupplier(id) {\n  return async (dispatch) => {\n    const {\n      data: { data },\n    } = await Connector.get(`/suppliers/${id}`);\n    dispatch({\n      type: DashboardConstants.DASHBOARD_GET_ONE_SUPPLIER,\n      payload: data,\n    });\n  };\n}\n\nfunction registerManufacturer(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/manufacturers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\nfunction registerSupplier(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/suppliers`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateManufacturer(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/manufacturers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateVendor(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/super_admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/vendor/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateSales(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/sales-order/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateAgent(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/salesagent/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/salesagent/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateCustomer(formData, id) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(\n          `/super_admin/customer/${id}`,\n          formData\n        );\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await Connector.put(`/admin/customer/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      };\n    }\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction updateDriver(formData, id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.put(`/super_admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.put(`/admin/driver/${id}`, formData);\n        console.log(data);\n        notify(\"Successfully updated\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction deleteCustomer(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\nfunction deleteSales(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/customer/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/sales-order/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteDriver(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/driver/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deletePurchase(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/purchase/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteVendor(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.delete(`/super_admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n      if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n        const data = await Connector.delete(`/admin/vendor/${id}`);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateSuppliers(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/suppliers/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\nfunction updateInventory(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(`/inventories/${id}`, formData);\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to update\");\n  }\n}\n\nfunction createDrug(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/drugs`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createInventory(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/inventories`, formData);\n      console.log(data);\n      notify(\"Successfully created\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction createProducts(formData) {\n  try {\n    if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n      // const c_id = getAdminUtils(\"admin_data\")?.role_name == \"super_admin\";\n      return async (dispatch) => {\n        const data = await ConnectForms.post(\n          `/super_admin/create-product`,\n          formData\n        );\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n          reloadPage();\n        }\n      };\n    }\n    if (getAdminUtils(\"admin_data\")?.[0]?.role_name == \"admin\") {\n      return async (dispatch) => {\n        const data = await ConnectForms.post(`/admin/create-product`, formData);\n        console.log(data);\n        if (data) {\n          notify(\"Successfully created\");\n        }\n      };\n    }\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminUpdateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(\n        `/admin/update-organization`,\n        formData\n      );\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateOrganisation(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.put(\n        `/super_admin/organization/${id}`,\n        formData\n      );\n      console.log(data);\n      notify(\"Successfully updated\");\n      reloadPage();\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteOrganisation(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/super_admin/organization/${id}`);\n      notify(\"Successfully deleted\");\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerOrganisation(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(\n        `/super_admin/create-organization`,\n        formData\n      );\n      console.log(data);\n      if (data) {\n        notify(\"successfully created organisation\");\n      }\n      // reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction approveUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/super_admin/approve-user/${id}`);\n      if (data) {\n        notify(\"successfully approved\");\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminApproveUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/admin/approve-user/${id}`);\n      if (data) {\n        notify(\"successfully approved\");\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction AdminRejectUser(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.get(`/admin/refute-user/${id}`);\n      console.log(data);\n      if (data) {\n        notify(\"successfully rejected\");\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction rejectUser(id) {\n  try {\n    return async (dispatch) => {\n      if (getAdminUtils(\"admin_data\")?.role_name == \"super_admin\") {\n        const data = await Connector.get(`/super_admin/refute-user/${id}`);\n        console.log(data);\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n      if (getAdminUtils(\"admin_data\")?.role_name == \"admin\") {\n        const data = await Connector.get(`/admin/refute-user/${id}`);\n        console.log(data);\n        if (data) {\n          notify(\"successfully rejected\");\n        }\n      }\n      reloadPage();\n    };\n  } catch (err) {\n    console.log(err);\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerClient(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/clients/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction registerStaff(formData) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.post(`/users/register`, formData);\n      console.log(data);\n      notify(data?.data?.data);\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updateProducts(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.post(`/admin/product/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction updatePurchase(formData, id) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.put(`/admin/purchase/${id}`, formData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully updated\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteProducts(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/admin/product/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction deleteAgent(id) {\n  try {\n    return async (dispatch) => {\n      const data = await Connector.delete(`/admin/salesagent/${id}`);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully deleted\");\n        reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n\nfunction uploadFile(api, imageData) {\n  try {\n    return async (dispatch) => {\n      const data = await ConnectForms.post(`${api}`, imageData);\n      if (data) {\n        console.log(data);\n        notify(\"Successfully uploaded\");\n        // reloadPage();\n      }\n    };\n  } catch (err) {\n    notify(\"failed to process\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}